[{"path":[]},{"path":[]},{"path":"https://elsa-undp.github.io/elsar/articles/elsaFunctions.html","id":"get-started","dir":"Articles","previous_headings":"Overview","what":"Get started","title":"An Example ELSA Workflow","text":"","code":"# load packages library(elsaFunctions) library(prioritizr) library(dplyr) library(ggplot2) library(sf) library(terra)  # set seed for reproducibility set.seed(500) # create boundary for Nepal boundary <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\"   )  ggplot() + geom_sf(data = boundary) # create custom projection and apply it to boundary wkt <- make_custom_projection(boundary = boundary, iso3 = \"NPL\") boundary_proj <- sf::st_transform(boundary, crs = sf::st_crs(wkt)) # alternative boundary_proj2 <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\",   do_project = TRUE ) # test crs print(sf::st_crs(boundary_proj) == sf::st_crs(boundary_proj2)) #> [1] TRUE # make planning units pus <- make_planning_units(boundary_proj = boundary_proj,                            pu_size = NULL,                            pu_threshold = 8.5e5,                            limit_to_mainland = FALSE) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\"  terra::plot(pus) # get feature data wad_dat <- get_wad_data()  terra::plot(wad_dat) # crop and normalise data wadOut <- make_normalised_raster(raster_in = wad_dat,                                  pus = pus,                                  iso3 = \"NPL\")  terra::plot(wadOut)"},{"path":[]},{"path":[]},{"path":"https://elsa-undp.github.io/elsar/articles/elsaR.html","id":"get-started","dir":"Articles","previous_headings":"Overview","what":"Get started","title":"An Example ELSA Workflow","text":"","code":"# load packages library(elsar) library(prioritizr) library(dplyr) library(ggplot2) library(sf) library(terra)  # set seed for reproducibility set.seed(500)"},{"path":"https://elsa-undp.github.io/elsar/articles/elsaR.html","id":"planning-region","dir":"Articles","previous_headings":"Overview","what":"Planning Region","title":"An Example ELSA Workflow","text":"start analysis, planning region needs defined planning units need created planning region. example, use Nepal case study demonstrate functions within package. , first obtain country boundary Nepal using iso3 string (“NPL”). Normally, need provide data set country boundaries filter . Data can loaded local machines vector raster format, using remote connection via postgres using elsar_load_data() function. , use pre-saved dataset.  make_boundary() function also provides option create custom projection centred planning region. can also done separate steps using make_custom_projection() function, integrated make_boundary() function. can test whether two crs boundaries match.","code":"# create boundary for Nepal boundary <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\",   custom_projection = FALSE )  ggplot() +   geom_sf(data = boundary) boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\",   custom_projection = TRUE )  # create custom projection and apply it to boundary wkt <- make_custom_projection(boundary = boundary, iso3 = \"NPL\") boundary_proj2 <- sf::st_transform(boundary, crs = sf::st_crs(wkt)) # test crs print(sf::st_crs(boundary_proj) == sf::st_crs(boundary_proj2)) #> [1] TRUE"},{"path":"https://elsa-undp.github.io/elsar/articles/elsaR.html","id":"planning-units","dir":"Articles","previous_headings":"Overview","what":"Planning Units","title":"An Example ELSA Workflow","text":"defining conservation planning problem, need subdivide planning region smaller planning units can either selected downstream prioritization feature information can attributed . function option add desired planning unit size. none provided, function aims make planning units small possible whilst still computationally efficient. default set 850,000 planning units, based previous experience run time.","code":"# make planning units pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\""},{"path":"https://elsa-undp.github.io/elsar/articles/elsaR.html","id":"features","dir":"Articles","previous_headings":"Overview","what":"Features","title":"An Example ELSA Workflow","text":"Biodiversity features integral part conservation planning. Features can range species distributions, general -arching datasets Key Biodiversity Areas (ref). example, use one dataset, World Atlas Desertification’s (WAD; see https://wad.jrc.ec.europa.eu/) Convergence Global Change Issues dataset. , input data can first loaded using elsar_load_data() function (dataset already saved package; change later). data needs re-projected re-sampled exactly match resolution extent previously created planning units. also normalise data values within range 0-1.  Instead quick look data using terra package’s plot function, can also create plot using plotting options integrated elsar package, elsar_plot_static_raster_c(), allows plot continuous raster data ggplot.  can also add background data plot add additional properties change appearance plot using elsar_plot_optics() function allows specify specifc ggplot . can also change colour palette something default “viridis”.  needed, logos can included map. location dependent plot dimensions therefore needs adjusted based figure, example using terra::ext().  interested distribution, can also plot distribution plots. , need create two separate plots put together:  can also transform data categories plot main plot inset way.","code":"# get feature data wad_subset <- get_wad_data() # crop and normalise data wadOut <- make_normalised_raster(   raster_in = wad_subset,   pus = pus,   iso3 = \"NPL\" )  terra::plot(wadOut) (plot_wad <- elsar_plot_static_raster_c(   raster_in = wadOut, type = \"ggplot_raster\",   legend_title = \"WAD\" )) custom_p <- ggplot2::scale_fill_distiller(   name = \"WAD\",   palette = \"YlGnBu\",   aesthetics = c(\"fill\"),   oob = scales::squish )  (plot_wad <- elsar_plot_static_raster_c(   raster_in = wadOut, type = \"ggplot_raster\",   custom_palette = custom_p,   background = wad_subset ) +   elsar_plot_optics()) #> Adding background layer. #> Extend based on ratio. #topRight x_min <- terra::ext(wadOut)[1][[1]] x_max <- terra::ext(wadOut)[2][[1]] y_min <- terra::ext(wadOut)[3][[1]] y_max <- terra::ext(wadOut)[4][[1]]  img_xmax <- x_max + x_max * 0.09 img_xmin <- img_xmax * 0.8 img_ymax <- y_max + y_max * 0.102 img_ymin <- img_ymax * 0.8  img_pos <- c(img_xmin, img_xmax, img_ymin, img_ymax)  (plot_out <- elsar_plot_static_raster_c(   raster_in = wadOut, type = \"ggplot_raster\",   background = wad_subset,   legend_title = \"WAD\",    expand_plot = TRUE ) +   elsar_plot_optics(include_logo = TRUE,                        logo_path = \"figures/elsaR_hex_sticker.png\", #change to logo later                       logo_pos = img_pos,                        logo_dim = c(50, 60))) #> Adding background layer. #> Extend based on ratio. plot_out <- elsar_plot_static_raster_c(   raster_in = wadOut, type = \"ggplot_raster\",   background = wad_subset,   raster_df_out = TRUE,   legend_title = \"WAD\",    expand_plot = TRUE ) #> Adding background layer. #> Extend based on ratio.  plot_wad <- plot_out[[1]] raster_df <- plot_out[[2]]  plot_dist <- elsar_plot_distribution(   raster_df = raster_df,   categorical = FALSE,   col_interest = \"wad_final_cog\" )  (plot_wad_inset  <- patchwork::wrap_plots((plot_wad +   elsar_plot_optics()) +   patchwork::inset_element(     (plot_dist +       elsar_plot_optics(include_text = FALSE) +       ggplot2::theme(         axis.title = ggplot2::element_blank(),         axis.text.x = ggplot2::element_blank(),         axis.ticks.x = ggplot2::element_blank()       )     ),     left = 0.1, # needs to be changed depending on plot dimensions     bottom = 0.08, # needs to be changed depending on plot dimensions     right = 0.35, # needs to be changed depending on plot dimensions     top = 0.4, # needs to be changed depending on plot dimensions     align_to = \"plot\"   ))) #> Picking joint bandwidth of 0.0113 plot_cat <- elsar_plot_static_raster_d(   raster_in = wadOut, type = \"ggplot_raster\",   categorical = FALSE,   background = wad_subset,   number_categories = 10,   data_layer = \"wad_final_cog\",   raster_df_out = TRUE,   legend_title = \"WAD\",    expand_plot = TRUE ) #> Plotting input data that is continuous and will be split into categories. #> Adding background layer. #> Extend based on ratio.  plot_wad_cat <- plot_cat[[1]] raster_df_cat <- plot_cat[[2]]   plot_dist_cat <- elsar_plot_distribution(   raster_df = raster_df_cat,   categorical = TRUE )  (plot_wad_cat_inset <- patchwork::wrap_plots((plot_wad_cat +   elsar_plot_optics()) +   patchwork::inset_element(     (plot_dist_cat +       elsar_plot_optics(include_text = FALSE) +       ggplot2::theme(         axis.title = ggplot2::element_blank(),         axis.text.x = ggplot2::element_blank(),         axis.ticks.x = ggplot2::element_blank()       )     ),     left = 0.1, # needs to be changed depending on plot dimensions     bottom = 0.08, # needs to be changed depending on plot dimensions     right = 0.35, # needs to be changed depending on plot dimensions     top = 0.4, # needs to be changed depending on plot dimensions     align_to = \"plot\"   )))"},{"path":"https://elsa-undp.github.io/elsar/articles/elsaR.html","id":"existing-protected-area","dir":"Articles","previous_headings":"Overview","what":"Existing Protected Area","title":"An Example ELSA Workflow","text":"ADD TEXT LATER","code":"current_pas <- current_pas_sf  (plot_wad_pas <- elsar_plot_static_raster_c(   raster_in = wadOut, type = \"ggplot_raster\",   background = wad_subset,   legend_title = \"WAD\" ) +   elsar_plot_extra_data(include_pas = current_pas, color_pa = \"red\") +   elsar_plot_optics()) #> Adding background layer. #> Extend based on ratio. #> Adding PA layer. #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. (plot_wad_pas2 <- elsar_plot_static_raster_c(   raster_in = wadOut, type = \"ggplot_raster\",   background = wad_subset,   legend_title = \"WAD\" ) +   elsar_plot_extra_data(include_pas = current_pas, pas_look = \"area\", color_pa = \"grey\") +   elsar_plot_optics(include_north_scale = TRUE)) #> Adding background layer. #> Extend based on ratio. #> Adding PA layer. #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one."},{"path":"https://elsa-undp.github.io/elsar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scott Atkinson. Author, maintainer. Sandra Neubert. Author.","code":""},{"path":"https://elsa-undp.github.io/elsar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Atkinson S, Neubert S (2025). elsar: Functions Tools Creating ELSA Tier 1 Data Stacks. R package version 0.0.2, https://elsa-undp.github.io/elsar/.","code":"@Manual{,   title = {elsar: Functions and Tools For Creating ELSA Tier 1 Data Stacks},   author = {Scott Atkinson and Sandra Neubert},   year = {2025},   note = {R package version 0.0.2},   url = {https://elsa-undp.github.io/elsar/}, }"},{"path":[]},{"path":"https://elsa-undp.github.io/elsar/reference/boundary_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Data used to extract the Nepal boundary — boundary_dat","title":"Data used to extract the Nepal boundary — boundary_dat","text":"sf file containing Southern Asia boundary information","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/boundary_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data used to extract the Nepal boundary — boundary_dat","text":"","code":"boundary_dat"},{"path":"https://elsa-undp.github.io/elsar/reference/boundary_dat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data used to extract the Nepal boundary — boundary_dat","text":"object class sf (inherits data.frame) 4 rows 21 columns.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/boundary_dat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data used to extract the Nepal boundary — boundary_dat","text":"https:// add link ","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/calc_feat_rep.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate feature representation — calc_feat_rep","title":"Calculate feature representation — calc_feat_rep","text":"function calculates feature representation single feature per zone comapred possible PUs feature across zones. E.g. 60 100 possible PUs selected zone 1 50 100 possible PUs selected zone 2: mean overall feature representation planning region 60% (60/100) + 50% (50/100) (= 110%, > 100%) Instead need get representation zone versus possible planning units whole region. means case zones share overlapping possible area prior prioritisation, 200 possible planning units overall feature planning region. representation across whole planning region : 60/200 + 50/200, 110/200 (= 55%)","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/calc_feat_rep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate feature representation — calc_feat_rep","text":"","code":"calc_feat_rep(prob.all, elsa_result, elsa_raster, feat_df, ELSA_text)"},{"path":"https://elsa-undp.github.io/elsar/reference/calc_feat_rep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate feature representation — calc_feat_rep","text":"prob.prioritizr problem. Needed input prioritizr function eval_feature_representation_summary() elsa_result prioritizr solution. Needed input prioritizr function eval_feature_representation_summary() elsa_raster SpatRaster containing label information zones used obtain solution. zero values. feat_df df containing information features, including columns \"label\" \"theme\" ELSA_text tbl_df containing translations displayed text plot. Needs","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/calc_feat_rep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate feature representation — calc_feat_rep","text":"list two tbl_df, one raw data second data prepared plotting.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/convert_points_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Buffered Polygons from Point Geometries — convert_points_polygon","title":"Create Buffered Polygons from Point Geometries — convert_points_polygon","text":"function creates polygon buffers around point geometries within given spatial layer. uses specified area attribute determine size buffer transforms geometries specified coordinate reference system accurate area calculations.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/convert_points_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Buffered Polygons from Point Geometries — convert_points_polygon","text":"","code":"convert_points_polygon(   wdpa_layer,   area_attr = \"REP_AREA\",   area_crs = \"ESRI:54009\",   nQuadSegs = 50,   append_sf = TRUE )"},{"path":"https://elsa-undp.github.io/elsar/reference/convert_points_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Buffered Polygons from Point Geometries — convert_points_polygon","text":"wdpa_layer sf object containing point geometries area attribute. area_attr character string specifying name area attribute. Default 'REP_AREA'. area_crs character string specifying coordinate reference system area calculations. Default 'ESRI:54009' (World Mollweide projection). nQuadSegs integer specifying number segments use buffering. Default 50. append_sf logical. TRUE, returns initial wdpa_layer polygons instead points. FALSE, returned points buffers.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/convert_points_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Buffered Polygons from Point Geometries — convert_points_polygon","text":"sf object buffered polygon geometries.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/convert_points_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Buffered Polygons from Point Geometries — convert_points_polygon","text":"","code":"if (FALSE) {  pa <- wdpar::wdpa_fetch(\"NPL\",   wait = TRUE,   download_dir = here::here() ) buffered_polygons <- convert_points_polygon(wdpa_layer = pa,       area_crs = sf::st_crs(pa))       }"},{"path":"https://elsa-undp.github.io/elsar/reference/current_pas_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Data used for current protected areas — current_pas_sf","title":"Data used for current protected areas — current_pas_sf","text":"current_pas_sf file WDPA database","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/current_pas_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data used for current protected areas — current_pas_sf","text":"","code":"current_pas_sf"},{"path":"https://elsa-undp.github.io/elsar/reference/current_pas_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data used for current protected areas — current_pas_sf","text":"object class sf (inherits tbl_df, tbl, data.frame) 1 rows 1 columns.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/current_pas_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data used for current protected areas — current_pas_sf","text":"https:// add link ","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsaFunctions-package.html","id":null,"dir":"Reference","previous_headings":"","what":"elsaFunctions: Functions and Tools For Creating ELSA Tier 1 Data Stacks — elsaFunctions-package","title":"elsaFunctions: Functions and Tools For Creating ELSA Tier 1 Data Stacks — elsaFunctions-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://elsa-undp.github.io/elsar/reference/elsaFunctions-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"elsaFunctions: Functions and Tools For Creating ELSA Tier 1 Data Stacks — elsaFunctions-package","text":"Maintainer: Scott Atkinson scott.atkinson@undp.org (ORCID) Authors: Sandra Neubert s.neubert@uq.edu.au (ORCID)","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"elsar: Functions and Tools For Creating ELSA Tier 1 Data Stacks — elsar-package","title":"elsar: Functions and Tools For Creating ELSA Tier 1 Data Stacks — elsar-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://elsa-undp.github.io/elsar/reference/elsar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"elsar: Functions and Tools For Creating ELSA Tier 1 Data Stacks — elsar-package","text":"Maintainer: Scott Atkinson scott.atkinson@undp.org (ORCID) Authors: Sandra Neubert s.neubert@uq.edu.au (ORCID)","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_continuous_to_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create categories for plotting out of continuous data — elsar_continuous_to_categorical","title":"Function to create categories for plotting out of continuous data — elsar_continuous_to_categorical","text":"Function create categories plotting continuous data","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_continuous_to_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create categories for plotting out of continuous data — elsar_continuous_to_categorical","text":"","code":"elsar_continuous_to_categorical(   raster_in,   data_layer,   number_categories,   manual_breaks = NULL,   hist_breaks_out = TRUE )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_continuous_to_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create categories for plotting out of continuous data — elsar_continuous_to_categorical","text":"raster_in SpatRaster file plotted. data_layer data layer continuous data converted categories. number_categories Number categories create continuous data manual_breaks vector breaks used categories. hist_breaks_out logical. TRUE (default), returns breaks used categorise data.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_continuous_to_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create categories for plotting out of continuous data — elsar_continuous_to_categorical","text":"list df categories interval labels, well interval breaks background data.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_continuous_to_categorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create categories for plotting out of continuous data — elsar_continuous_to_categorical","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\" wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(   raster_in = wad_dat,   pus = pus,   iso3 = \"NPL\" )  wad_cat <- elsar_continuous_to_categorical(wadOut,   data_layer = \"wad_final_cog\", number_categories = 10 )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_extend.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extend the spatial extend around a raster file for plotting — elsar_extend","title":"Function to extend the spatial extend around a raster file for plotting — elsar_extend","text":"plotting (e.g. elsar_plot_static_raster_c(), extent main data used. elsar_extend() allows extract background data plotted extent bit greater extent main data.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_extend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extend the spatial extend around a raster file for plotting — elsar_extend","text":"","code":"elsar_extend(raster_main = NULL, raster_to_crop = NULL, extend_by = 0.05)"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_extend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extend the spatial extend around a raster file for plotting — elsar_extend","text":"raster_main SpatRaster file main data original plot. extent file used baseline new plot extent. raster_to_crop SpatRaster file data cropped using new extent. extend_by numerical value allows extend background beyond extent raster_in. extend_background <= 1, lat lon extend extended ratio provided (e.g. 0.05 extend 5%). extend_background > 1 sides extended absolute value provided.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_extend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to extend the spatial extend around a raster file for plotting — elsar_extend","text":"SpatRaster file new dimensions.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_extend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to extend the spatial extend around a raster file for plotting — elsar_extend","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\" wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(   raster_in = wad_dat,   pus = pus,   iso3 = \"NPL\" ) wad_dat <- terra::project(wad_dat, terra::crs(wadOut))  bckgrnd_dat <- elsar_extend(   raster_main = wadOut,   raster_to_crop = wad_dat,   extend_by = 0.05 ) #> Extend based on ratio."},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load different types of data — elsar_load_data","title":"Load different types of data — elsar_load_data","text":"Load different types data","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load different types of data — elsar_load_data","text":"","code":"elsar_load_data(   file_name,   file_path = NULL,   file_lyr = NULL,   file_type,   wkt_filter = FALSE,   bb_extend = NULL,   db_info = NULL,   pg_connection = NULL,   iso3_column = \"iso3cd\",   iso3 )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load different types of data — elsar_load_data","text":"file_name character file name. Needs contain file type ending (e.g. .tif) loading local source. file_path path local file stored. Needs NULL using postgres. file_lyr optional. Layer information data. file_type character file type. Current options : \"postgres\", \"shp\", \"gpkg\", \"geojson\", \"tif\", \"tiff\", \"grd\", \"gri\", \"nc\", \"hdf\" wkt_filter character; WKT representation spatial filter used bound loaded data bb_extend SpatRaster used bounding box wkt_filter = TRUE, e.g. planning units db_info list style dictionary. needed file_type = \"postgres\". Needs following structure information: postgres_dict <- c(host = \"\", dbname =\"\", port = , user = \"\", password = \"\") pg_connection Either list style dictionary connection string. needed file_type = \"postgres\". iso3_column relevant file_type \"postgres\" selected. string name iso3 information can found dataset. iso3 iso3 country code (character) country interest.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load different types of data — elsar_load_data","text":"loaded data either SpatRaster sf object","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load different types of data — elsar_load_data","text":"","code":"if (FALSE) { load_tif <- elsar_load_data(   file_name = \"pu_nepal_450m.tif\", file_path = localPath,   file_type = \"tif\" )  load_geojson <- elsar_load_data(   file_name = \"nepal.geojson\", file_path = localPath,   file_type = \"geojson\" )  postgres_dict <- c(   host = \"yourhost\",   dbname = \"yourdbname\",   port = portNumber,   user = \"yourusername\",   password = \"yourpassword\" )  load_postgres <- elsar_load_data(   file_name = \"bnda_simplified\",   file_type = \"postgres\",   db_info = postgres_dict,   iso3_column = \"iso3cd\",   iso3 = \"NPL\" )  pg_conn <- make_postgres_connection(   dbname = \"yourdatabase\",   user = \"yourusername\",   password = \"yourpassword\" )  load_postgres <- elsar_load_data(   file_name = \"bnda_simplified\",   file_type = \"postgres\",   pg_connection = pg_conn,   iso3_column = \"iso3cd\",   iso3 = \"NPL\" ) }"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a plot with background data for another plot — elsar_plot_background","title":"Function to create a plot with background data for another plot — elsar_plot_background","text":"Function create plot background data another plot","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a plot with background data for another plot — elsar_plot_background","text":"","code":"elsar_plot_background(   plot_type = \"ggplot\",   background_dat = NULL,   rescale_background = TRUE,   increase_extend = 0.05,   main_data = NULL,   background_alpha = 0.2,   color_map = \"viridis\",   custom_palette = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a plot with background data for another plot — elsar_plot_background","text":"plot_type character denoting whether \"ggplot\" \"tmap\" used. Needs match main plot background_dat SpatRaster file contains data used background. rescale_background Logical. TRUE, rescales SpatRaster values 0-1. increase_extend numerical value allows extend background beyond extent raster_in. extend_background <= 1, lat lon extend extended ratio provided (e.g. 0.05 extend 5%). extend_background > 1 sides extended absolute value provided. main_data SpatRaster file contains data main part main plot. background_alpha value (0-1) opacity locked areas plotted top plots. color_map name viridis palette used. Default \"viridis\". custom_palette optional custom palette plotting. Default uses viridis package.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a plot with background data for another plot — elsar_plot_background","text":"list ggplot tmap object SpatRaster new background data.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a plot with background data for another plot — elsar_plot_background","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\",   do_project = TRUE )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\" wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(   raster_in = wad_dat,   pus = pus,   iso3 = \"NPL\" ) background_plot <- elsar_plot_background(   background_dat = wad_dat,   main_data = wadOut ) #> Adding background layer. #> Extend based on ratio."},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a plot with continuous background data for another plot — elsar_plot_background_c","title":"Function to create a plot with continuous background data for another plot — elsar_plot_background_c","text":"Function create plot continuous background data another plot","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a plot with continuous background data for another plot — elsar_plot_background_c","text":"","code":"elsar_plot_background_c(   plot_type = \"ggplot\",   background_dat = NULL,   rescale_background = TRUE,   increase_extend = 0.05,   main_data = NULL,   background_alpha = 0.2,   color_map = \"viridis\",   custom_palette = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a plot with continuous background data for another plot — elsar_plot_background_c","text":"plot_type character denoting whether \"ggplot\" \"tmap\" used. Needs match main plot background_dat SpatRaster file contains data used background. rescale_background Logical. TRUE, rescales SpatRaster values 0-1. increase_extend numerical value allows extend background beyond extent raster_in. extend_background <= 1, lat lon extend extended ratio provided (e.g. 0.05 extend 5%). extend_background > 1 sides extended absolute value provided. main_data SpatRaster file contains data main part main plot. background_alpha value (0-1) opacity locked areas plotted top plots. color_map name viridis palette used. Default \"viridis\". custom_palette optional custom palette plotting. Default uses viridis package.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a plot with continuous background data for another plot — elsar_plot_background_c","text":"list ggplot tmap object SpatRaster new background data.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a plot with continuous background data for another plot — elsar_plot_background_c","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\" wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(   raster_in = wad_dat,   pus = pus,   iso3 = \"NPL\" )  (background_plot <- elsar_plot_background_c(   background_dat = wad_dat,   main_data = wadOut )) #> Adding background layer. #> Extend based on ratio. #> [[1]]  #>  #> [[2]] #>              x       y wad_final_cog #> 1   -412948.18 3716757   0.534805979 #> 2   -412080.41 3716757   0.558241526 #> 3   -411212.63 3716757   0.558241526 #> 4   -410344.85 3716757   0.543103169 #> 5   -409477.07 3716757   0.486064215 #> 6   -408609.29 3716757   0.486064215 #> 7   -407741.51 3716757   0.526957168 #> 8   -406873.73 3716757   0.558241526 #> 14  -401667.05 3716757   0.481930698 #> 15  -400799.27 3716757   0.478492736 #> 16  -399931.49 3716757   0.478492736 #> 17  -399063.72 3716757   0.482256933 #> 18  -398195.94 3716757   0.558241526 #> 19  -397328.16 3716757   0.535319993 #> 20  -396460.38 3716757   0.481569516 #> 21  -395592.60 3716757   0.486064215 #> 22  -394724.82 3716757   0.481186316 #> 23  -393857.04 3716757   0.478492736 #> 24  -392989.26 3716757   0.478492736 #> 25  -392121.48 3716757   0.478492736 #> 26  -391253.70 3716757   0.478492736 #> 27  -390385.92 3716757   0.481413300 #> 28  -389518.14 3716757   0.526311504 #> 29  -388650.36 3716757   0.565813005 #> 30  -387782.58 3716757   0.619408863 #> 31  -386914.80 3716757   0.569196055 #> 32  -386047.02 3716757   0.557296740 #> 33  -385179.25 3716757   0.550670047 #> 34  -384311.47 3716757   0.524317739 #> 35  -383443.69 3716757   0.478492736 #> 42  -377369.23 3716757   0.519300736 #> 43  -376501.45 3716757   0.432050324 #> 44  -375633.67 3716757   0.398743947 #> 45  -374765.89 3716757   0.398743947 #> 46  -373898.11 3716757   0.398743947 #> 47  -373030.33 3716757   0.398743947 #> 48  -372162.55 3716757   0.424570376 #> 49  -371294.78 3716757   0.478492736 #> 50  -370427.00 3716757   0.478492736 #> 51  -369559.22 3716757   0.424210031 #> 52  -368691.44 3716757   0.398743947 #> 53  -367823.66 3716757   0.398743947 #> 54  -366955.88 3716757   0.398743947 #> 55  -366088.10 3716757   0.396448132 #> 56  -365220.32 3716757   0.428035566 #> 57  -364352.54 3716757   0.478492736 #> 58  -363484.76 3716757   0.478492736 #> 59  -362616.98 3716757   0.472594682 #> 60  -361749.20 3716757   0.467832537 #> 61  -360881.42 3716757   0.386932285 #> 62  -360013.64 3716757   0.346963164 #> 63  -359145.86 3716757   0.398743947 #> 64  -358278.09 3716757   0.398743947 #> 65  -357410.31 3716757   0.306441680 #> 66  -356542.53 3716757   0.184206770 #> 68  -354806.97 3716757   0.149174852 #> 69  -353939.19 3716757   0.087320278 #> 70  -353071.41 3716757   0.114812736 #> 71  -352203.63 3716757   0.159497579 #> 72  -351335.85 3716757   0.159497579 #> 73  -350468.07 3716757   0.159497579 #> 74  -349600.29 3716757   0.098152236 #> 75  -348732.51 3716757   0.235628899 #> 76  -347864.73 3716757   0.239246368 #> 77  -346996.95 3716757   0.239246368 #> 78  -346129.17 3716757   0.201029616 #> 79  -345261.39 3716757   0.159497579 #> 80  -344393.62 3716757   0.107739460 #> 81  -343525.84 3716757   0.147663262 #> 82  -342658.06 3716757   0.159497579 #> 83  -341790.28 3716757   0.159497579 #> 84  -340922.50 3716757   0.134983011 #> 85  -340054.72 3716757   0.123891888 #> 86  -339186.94 3716757   0.167069058 #> 87  -338319.16 3716757   0.217338241 #> 88  -337451.38 3716757   0.174218473 #> 89  -336583.60 3716757   0.159497579 #> 90  -335715.82 3716757   0.159497579 #> 91  -334848.04 3716757   0.134056536 #> 92  -333980.26 3716757   0.079748789 #> 93  -333112.48 3716757   0.083965329 #> 94  -332244.70 3716757   0.087320278 #> 95  -331376.92 3716757   0.081302609 #> 96  -330509.15 3716757   0.013443549 #> 97  -329641.37 3716757   0.021881967 #> 98  -328773.59 3716757   0.085061054 #> 99  -327905.81 3716757   0.079748789 #> 100 -327038.03 3716757   0.036982021 #> 101 -326170.25 3716757   0.052252201 #> 102 -325302.47 3716757   0.079748789 #> 103 -324434.69 3716757   0.086541871 #> 104 -323566.91 3716757   0.086117811 #> 105 -322699.13 3716757   0.061804079 #> 106 -321831.35 3716757   0.043775585 #> 107 -320963.57 3716757   0.128441907 #> 108 -320095.79 3716757   0.167069058 #> 109 -319228.01 3716757   0.167069058 #> 110 -318360.23 3716757   0.092180818 #> 111 -317492.46 3716757   0.158817985 #> 112 -316624.68 3716757   0.159497579 #> 113 -315756.90 3716757   0.189488651 #> 114 -314889.12 3716757   0.235498409 #> 115 -314021.34 3716757   0.138399554 #> 116 -313153.56 3716757   0.079748789 #> 117 -312285.78 3716757   0.086198447 #> 118 -311418.00 3716757   0.095564344 #> 119 -310550.22 3716757   0.159497579 #> 120 -309682.44 3716757   0.131151648 #> 121 -308814.66 3716757   0.079748789 #> 122 -307946.88 3716757   0.079748789 #> 123 -307079.10 3716757   0.193353240 #> 124 -306211.32 3716757   0.239246368 #> 125 -305343.54 3716757   0.239246368 #> 126 -304475.76 3716757   0.239246368 #> 127 -303607.99 3716757   0.239246368 #> 128 -302740.21 3716757   0.239246368 #> 129 -301872.43 3716757   0.239246368 #> 130 -301004.65 3716757   0.239246368 #> 131 -300136.87 3716757   0.239246368 #> 132 -299269.09 3716757   0.239246368 #> 133 -298401.31 3716757   0.239246368 #> 134 -297533.53 3716757   0.239246368 #> 135 -296665.75 3716757   0.239246368 #> 136 -295797.97 3716757   0.239246368 #> 137 -294930.19 3716757   0.239246368 #> 138 -294062.41 3716757   0.182230059 #> 139 -293194.63 3716757   0.160151038 #> 140 -292326.85 3716757   0.159497579 #> 141 -291459.07 3716757   0.159497579 #> 142 -290591.29 3716757   0.159497579 #> 143 -289723.52 3716757   0.159497579 #> 144 -288855.74 3716757   0.159497579 #> 145 -287987.96 3716757   0.159497579 #> 146 -287120.18 3716757   0.159497579 #> 147 -286252.40 3716757   0.159497579 #> 148 -285384.62 3716757   0.159497579 #> 149 -284516.84 3716757   0.159497579 #> 150 -283649.06 3716757   0.159497579 #> 151 -282781.28 3716757   0.154729445 #> 152 -281913.50 3716757   0.151926090 #> 153 -281045.72 3716757   0.158509594 #> 154 -280177.94 3716757   0.159497579 #> 155 -279310.16 3716757   0.159497579 #> 156 -278442.38 3716757   0.159497579 #> 157 -277574.60 3716757   0.159497579 #> 158 -276706.82 3716757   0.159497579 #> 159 -275839.05 3716757   0.159497579 #> 160 -274971.27 3716757   0.159497579 #> 161 -274103.49 3716757   0.150803965 #> 162 -273235.71 3716757   0.079748789 #> 163 -272367.93 3716757   0.107709343 #> 164 -271500.15 3716757   0.122051600 #> 182 -255880.12 3716757   0.154538349 #> 183 -255012.34 3716757   0.079748789 #> 184 -254144.56 3716757   0.056723647 #> 185 -253276.78 3716757   0.029423963 #> 186 -252409.00 3716757   0.076164475 #> 187 -251541.22 3716757   0.030112954 #> 203 -237656.75 3716757   0.078354632 #> 204 -236788.97 3716757   0.079748789 #> 205 -235921.19 3716757   0.079748789 #> 206 -235053.42 3716757   0.079748789 #> 207 -234185.64 3716757   0.079748789 #> 208 -233317.86 3716757   0.079748789 #> 209 -232450.08 3716757   0.135780241 #> 210 -231582.30 3716757   0.159497579 #> 211 -230714.52 3716757   0.159497579 #> 212 -229846.74 3716757   0.159497579 #> 213 -228978.96 3716757   0.133567544 #> 214 -228111.18 3716757   0.079748789 #> 215 -227243.40 3716757   0.079748789 #> 216 -226375.62 3716757   0.079748789 #> 217 -225507.84 3716757   0.079748789 #> 218 -224640.06 3716757   0.079748789 #> 219 -223772.28 3716757   0.079748789 #> 220 -222904.50 3716757   0.079748789 #> 221 -222036.73 3716757   0.079748789 #> 222 -221168.95 3716757   0.079748789 #> 223 -220301.17 3716757   0.079748789 #> 224 -219433.39 3716757   0.079748789 #> 225 -218565.61 3716757   0.073239776 #> 226 -217697.83 3716757   0.079748789 #> 227 -216830.05 3716757   0.059258487 #> 228 -215962.27 3716757   0.007571487 #> 229 -215094.49 3716757   0.003620904 #> 230 -214226.71 3716757   0.000000000 #> 231 -213358.93 3716757   0.054829769 #> 232 -212491.15 3716757   0.072364685 #> 233 -211623.37 3716757   0.079730185 #> 234 -210755.59 3716757   0.079748789 #> 235 -209887.81 3716757   0.079748789 #> 236 -209020.03 3716757   0.079748789 #> 237 -208152.26 3716757   0.075053834 #> 238 -207284.48 3716757   0.024431994 #> 239 -206416.70 3716757   0.076046786 #> 240 -205548.92 3716757   0.086404906 #> 241 -204681.14 3716757   0.079748789 #> 242 -203813.36 3716757   0.079748789 #> 243 -202945.58 3716757   0.079748789 #> 244 -202077.80 3716757   0.079748789 #> 245 -201210.02 3716757   0.079748789 #> 246 -200342.24 3716757   0.079748789 #> 247 -199474.46 3716757   0.079748789 #> 248 -198606.68 3716757   0.079748789 #> 249 -197738.90 3716757   0.079748789 #> 250 -196871.12 3716757   0.079748789 #> 251 -196003.34 3716757   0.079748789 #> 252 -195135.56 3716757   0.024102717 #> 253 -194267.79 3716757   0.000000000 #> 254 -193400.01 3716757   0.006176339 #> 255 -192532.23 3716757   0.079748789 #> 256 -191664.45 3716757   0.054204141 #> 257 -190796.67 3716757   0.000000000 #> 258 -189928.89 3716757   0.000000000 #> 259 -189061.11 3716757   0.000000000 #> 260 -188193.33 3716757   0.006027505 #> 261 -187325.55 3716757   0.007130789 #> 262 -186457.77 3716757   0.000000000 #> 263 -185589.99 3716757   0.000000000 #> 264 -184722.21 3716757   0.000000000 #> 265 -183854.43 3716757   0.042870371 #> 266 -182986.65 3716757   0.079748789 #> 274 -176044.42 3716757   0.000000000 #> 275 -175176.64 3716757   0.000000000 #> 276 -174308.86 3716757   0.000000000 #> 277 -173441.08 3716757   0.000000000 #> 278 -172573.30 3716757   0.000000000 #> 279 -171705.52 3716757   0.000000000 #> 280 -170837.74 3716757   0.000000000 #> 281 -169969.96 3716757   0.000000000 #> 282 -169102.18 3716757   0.000000000 #> 283 -168234.40 3716757   0.000000000 #> 284 -167366.63 3716757   0.000000000 #> 285 -166498.85 3716757   0.000000000 #> 286 -165631.07 3716757   0.000000000 #> 287 -164763.29 3716757   0.000000000 #> 288 -163895.51 3716757   0.056905825 #> 289 -163027.73 3716757   0.079748789 #> 290 -162159.95 3716757   0.010913691 #> 291 -161292.17 3716757   0.005927195 #> 292 -160424.39 3716757   0.026804401 #> 293 -159556.61 3716757   0.079748789 #> 294 -158688.83 3716757   0.079748789 #> 295 -157821.05 3716757   0.079748789 #> 296 -156953.27 3716757   0.073601680 #> 297 -156085.49 3716757   0.072177301 #> 298 -155217.71 3716757   0.072177301 #> 299 -154349.93 3716757   0.051795366 #> 300 -153482.16 3716757   0.007571487 #> 301 -152614.38 3716757   0.047511822 #> 302 -151746.60 3716757   0.079748789 #> 303 -150878.82 3716757   0.085739706 #> 304 -150011.04 3716757   0.087320278 #> 305 -149143.26 3716757   0.085988366 #> 306 -148275.48 3716757   0.079748789 #> 307 -147407.70 3716757   0.079748789 #> 308 -146539.92 3716757   0.075715193 #> 309 -145672.14 3716757   0.077111461 #> 310 -144804.36 3716757   0.079748789 #> 311 -143936.58 3716757   0.082545299 #> 312 -143068.80 3716757   0.159497579 #> 313 -142201.02 3716757   0.137628581 #> 314 -141333.24 3716757   0.079748789 #> 315 -140465.47 3716757   0.079748789 #> 316 -139597.69 3716757   0.079748789 #> 317 -138729.91 3716757   0.079748789 #> 318 -137862.13 3716757   0.079748789 #> 319 -136994.35 3716757   0.078741482 #> 320 -136126.57 3716757   0.072177301 #> 321 -135258.79 3716757   0.074997953 #> 322 -134391.01 3716757   0.079748789 #> 323 -133523.23 3716757   0.031068641 #> 324 -132655.45 3716757   0.000000000 #> 325 -131787.67 3716757   0.006422903 #> 326 -130919.89 3716757   0.077459453 #> 327 -130052.11 3716757   0.079748789 #> 328 -129184.33 3716757   0.079748789 #> 329 -128316.55 3716757   0.117298373 #> 330 -127448.77 3716757   0.159497579 #> 331 -126581.00 3716757   0.159497579 #> 332 -125713.22 3716757   0.159497579 #> 333 -124845.44 3716757   0.152426899 #> 334 -123977.66 3716757   0.079748789 #> 335 -123109.88 3716757   0.077240521 #> 336 -122242.10 3716757   0.111490576 #> 337 -121374.32 3716757   0.159497579 #> 338 -120506.54 3716757   0.049746965 #> 339 -119638.76 3716757   0.000000000 #> 340 -118770.98 3716757   0.000000000 #> 341 -117903.20 3716757   0.000000000 #> 342 -117035.42 3716757   0.000000000 #> 343 -116167.64 3716757   0.031006674 #> 344 -115299.86 3716757   0.076330502 #> 345 -114432.08 3716757   0.079748789 #> 346 -113564.30 3716757   0.142464394 #> 347 -112696.53 3716757   0.149030529 #> 348 -111828.75 3716757   0.081044109 #> 349 -110960.97 3716757   0.108253141 #> 350 -110093.19 3716757   0.126883401 #> 351 -109225.41 3716757   0.079748789 #> 352 -108357.63 3716757   0.079748789 #> 353 -107489.85 3716757   0.079748789 #> 354 -106622.07 3716757   0.009143367 #> 355 -105754.29 3716757   0.007571487 #> 356 -104886.51 3716757   0.027015407 #> 357 -104018.73 3716757   0.079748789 #> 358 -103150.95 3716757   0.079748789 #> 359 -102283.17 3716757   0.079748789 #> 360 -101415.39 3716757   0.079748789 #> 361 -100547.61 3716757   0.010721387 #> 362  -99679.84 3716757   0.000000000 #> 363  -98812.06 3716757   0.000000000 #> 364  -97944.28 3716757   0.000000000 #> 365  -97076.50 3716757   0.000000000 #> 366  -96208.72 3716757   0.000000000 #> 367  -95340.94 3716757   0.000000000 #> 368  -94473.16 3716757   0.067265624 #> 369  -93605.38 3716757   0.079748789 #> 370  -92737.60 3716757   0.079748789 #> 371  -91869.82 3716757   0.104799693 #> 372  -91002.04 3716757   0.151926090 #> 373  -90134.26 3716757   0.156355088 #> 374  -89266.48 3716757   0.159497579 #> 375  -88398.70 3716757   0.100107214 #> 376  -87530.92 3716757   0.086686612 #> 377  -86663.14 3716757   0.063200584 #> 378  -85795.37 3716757   0.000000000 #> 379  -84927.59 3716757   0.000000000 #> 380  -84059.81 3716757   0.000000000 #> 381  -83192.03 3716757   0.000000000 #> 382  -82324.25 3716757   0.000000000 #> 383  -81456.47 3716757   0.073860779 #> 384  -80588.69 3716757   0.064845721 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 550851 rows ] #>"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a plot with discrete background data for another plot — elsar_plot_background_d","title":"Function to create a plot with discrete background data for another plot — elsar_plot_background_d","text":"Function create plot discrete background data another plot","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a plot with discrete background data for another plot — elsar_plot_background_d","text":"","code":"elsar_plot_background_d(   plot_type = \"ggplot\",   background_dat = NULL,   rescale_background = TRUE,   increase_extend = 0.05,   main_data = NULL,   background_alpha = 0.2,   color_map = \"viridis\",   custom_palette = NULL,   categorical = FALSE,   number_categories = 10,   data_layer = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a plot with discrete background data for another plot — elsar_plot_background_d","text":"plot_type character denoting whether \"ggplot\" \"tmap\" used. Needs match main plot background_dat SpatRaster file contains data used background. rescale_background Logical. TRUE, rescales SpatRaster values 0-1. increase_extend numerical value allows extend background beyond extent raster_in. extend_background <= 1, lat lon extend extended ratio provided (e.g. 0.05 extend 5%). extend_background > 1 sides extended absolute value provided. main_data SpatRaster file contains data main part main plot. background_alpha value (0-1) opacity locked areas plotted top plots. color_map name viridis palette used. Default \"viridis\". custom_palette optional custom palette plotting. Default uses viridis package. categorical logical. data categorical (TRUE), convert factor (yet) use number categories given. number_categories data pre-defined categories, many categories split continuous data data_layer data layer continuous data converted categories.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a plot with discrete background data for another plot — elsar_plot_background_d","text":"list ggplot tmap object SpatRaster new background data.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_background_d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a plot with discrete background data for another plot — elsar_plot_background_d","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\" wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(   raster_in = wad_dat,   pus = pus,   iso3 = \"NPL\" ) (background_plot <- elsar_plot_background_d(   background_dat = wad_dat,   main_data = wadOut,   increase_extend = 0.05,   number_categories = 10,   data_layer = \"wad_final_cog\", )) #> Adding background layer. #> Extend based on ratio. #> [[1]]  #>  #> [[2]] #>             x       y wad_final_cog category  interval #> 1   -412948.2 3716757   0.534805979        7 0.53-0.61 #> 2   -412080.4 3716757   0.558241526        7 0.53-0.61 #> 3   -411212.6 3716757   0.558241526        7 0.53-0.61 #> 4   -410344.8 3716757   0.543103169        7 0.53-0.61 #> 5   -409477.1 3716757   0.486064215        6 0.44-0.53 #> 6   -408609.3 3716757   0.486064215        6 0.44-0.53 #> 7   -407741.5 3716757   0.526957168        7 0.53-0.61 #> 8   -406873.7 3716757   0.558241526        7 0.53-0.61 #> 14  -401667.1 3716757   0.481930698        6 0.44-0.53 #> 15  -400799.3 3716757   0.478492736        6 0.44-0.53 #> 16  -399931.5 3716757   0.478492736        6 0.44-0.53 #> 17  -399063.7 3716757   0.482256933        6 0.44-0.53 #> 18  -398195.9 3716757   0.558241526        7 0.53-0.61 #> 19  -397328.2 3716757   0.535319993        7 0.53-0.61 #> 20  -396460.4 3716757   0.481569516        6 0.44-0.53 #> 21  -395592.6 3716757   0.486064215        6 0.44-0.53 #> 22  -394724.8 3716757   0.481186316        6 0.44-0.53 #> 23  -393857.0 3716757   0.478492736        6 0.44-0.53 #> 24  -392989.3 3716757   0.478492736        6 0.44-0.53 #> 25  -392121.5 3716757   0.478492736        6 0.44-0.53 #> 26  -391253.7 3716757   0.478492736        6 0.44-0.53 #> 27  -390385.9 3716757   0.481413300        6 0.44-0.53 #> 28  -389518.1 3716757   0.526311504        6 0.44-0.53 #> 29  -388650.4 3716757   0.565813005        7 0.53-0.61 #> 30  -387782.6 3716757   0.619408863        8  0.61-0.7 #> 31  -386914.8 3716757   0.569196055        7 0.53-0.61 #> 32  -386047.0 3716757   0.557296740        7 0.53-0.61 #> 33  -385179.2 3716757   0.550670047        7 0.53-0.61 #> 34  -384311.5 3716757   0.524317739        6 0.44-0.53 #> 35  -383443.7 3716757   0.478492736        6 0.44-0.53 #> 42  -377369.2 3716757   0.519300736        6 0.44-0.53 #> 43  -376501.5 3716757   0.432050324        5 0.35-0.44 #> 44  -375633.7 3716757   0.398743947        5 0.35-0.44 #> 45  -374765.9 3716757   0.398743947        5 0.35-0.44 #> 46  -373898.1 3716757   0.398743947        5 0.35-0.44 #> 47  -373030.3 3716757   0.398743947        5 0.35-0.44 #> 48  -372162.6 3716757   0.424570376        5 0.35-0.44 #> 49  -371294.8 3716757   0.478492736        6 0.44-0.53 #> 50  -370427.0 3716757   0.478492736        6 0.44-0.53 #> 51  -369559.2 3716757   0.424210031        5 0.35-0.44 #> 52  -368691.4 3716757   0.398743947        5 0.35-0.44 #> 53  -367823.7 3716757   0.398743947        5 0.35-0.44 #> 54  -366955.9 3716757   0.398743947        5 0.35-0.44 #> 55  -366088.1 3716757   0.396448132        5 0.35-0.44 #> 56  -365220.3 3716757   0.428035566        5 0.35-0.44 #> 57  -364352.5 3716757   0.478492736        6 0.44-0.53 #> 58  -363484.8 3716757   0.478492736        6 0.44-0.53 #> 59  -362617.0 3716757   0.472594682        6 0.44-0.53 #> 60  -361749.2 3716757   0.467832537        6 0.44-0.53 #> 61  -360881.4 3716757   0.386932285        5 0.35-0.44 #> 62  -360013.6 3716757   0.346963164        4 0.26-0.35 #> 63  -359145.9 3716757   0.398743947        5 0.35-0.44 #> 64  -358278.1 3716757   0.398743947        5 0.35-0.44 #> 65  -357410.3 3716757   0.306441680        4 0.26-0.35 #> 66  -356542.5 3716757   0.184206770        3 0.18-0.26 #> 68  -354807.0 3716757   0.149174852        2 0.09-0.18 #> 69  -353939.2 3716757   0.087320278        1    0-0.09 #> 70  -353071.4 3716757   0.114812736        2 0.09-0.18 #> 71  -352203.6 3716757   0.159497579        2 0.09-0.18 #> 72  -351335.9 3716757   0.159497579        2 0.09-0.18 #> 73  -350468.1 3716757   0.159497579        2 0.09-0.18 #> 74  -349600.3 3716757   0.098152236        2 0.09-0.18 #> 75  -348732.5 3716757   0.235628899        3 0.18-0.26 #> 76  -347864.7 3716757   0.239246368        3 0.18-0.26 #> 77  -346997.0 3716757   0.239246368        3 0.18-0.26 #> 78  -346129.2 3716757   0.201029616        3 0.18-0.26 #> 79  -345261.4 3716757   0.159497579        2 0.09-0.18 #> 80  -344393.6 3716757   0.107739460        2 0.09-0.18 #> 81  -343525.8 3716757   0.147663262        2 0.09-0.18 #> 82  -342658.1 3716757   0.159497579        2 0.09-0.18 #> 83  -341790.3 3716757   0.159497579        2 0.09-0.18 #> 84  -340922.5 3716757   0.134983011        2 0.09-0.18 #> 85  -340054.7 3716757   0.123891888        2 0.09-0.18 #> 86  -339186.9 3716757   0.167069058        2 0.09-0.18 #> 87  -338319.2 3716757   0.217338241        3 0.18-0.26 #> 88  -337451.4 3716757   0.174218473        2 0.09-0.18 #> 89  -336583.6 3716757   0.159497579        2 0.09-0.18 #> 90  -335715.8 3716757   0.159497579        2 0.09-0.18 #> 91  -334848.0 3716757   0.134056536        2 0.09-0.18 #> 92  -333980.3 3716757   0.079748789        1    0-0.09 #> 93  -333112.5 3716757   0.083965329        1    0-0.09 #> 94  -332244.7 3716757   0.087320278        1    0-0.09 #> 95  -331376.9 3716757   0.081302609        1    0-0.09 #> 96  -330509.1 3716757   0.013443549        1    0-0.09 #> 97  -329641.4 3716757   0.021881967        1    0-0.09 #> 98  -328773.6 3716757   0.085061054        1    0-0.09 #> 99  -327905.8 3716757   0.079748789        1    0-0.09 #> 100 -327038.0 3716757   0.036982021        1    0-0.09 #> 101 -326170.2 3716757   0.052252201        1    0-0.09 #> 102 -325302.5 3716757   0.079748789        1    0-0.09 #> 103 -324434.7 3716757   0.086541871        1    0-0.09 #> 104 -323566.9 3716757   0.086117811        1    0-0.09 #> 105 -322699.1 3716757   0.061804079        1    0-0.09 #> 106 -321831.4 3716757   0.043775585        1    0-0.09 #> 107 -320963.6 3716757   0.128441907        2 0.09-0.18 #> 108 -320095.8 3716757   0.167069058        2 0.09-0.18 #> 109 -319228.0 3716757   0.167069058        2 0.09-0.18 #> 110 -318360.2 3716757   0.092180818        2 0.09-0.18 #> 111 -317492.5 3716757   0.158817985        2 0.09-0.18 #> 112 -316624.7 3716757   0.159497579        2 0.09-0.18 #> 113 -315756.9 3716757   0.189488651        3 0.18-0.26 #> 114 -314889.1 3716757   0.235498409        3 0.18-0.26 #> 115 -314021.3 3716757   0.138399554        2 0.09-0.18 #> 116 -313153.6 3716757   0.079748789        1    0-0.09 #> 117 -312285.8 3716757   0.086198447        1    0-0.09 #> 118 -311418.0 3716757   0.095564344        2 0.09-0.18 #> 119 -310550.2 3716757   0.159497579        2 0.09-0.18 #> 120 -309682.4 3716757   0.131151648        2 0.09-0.18 #> 121 -308814.7 3716757   0.079748789        1    0-0.09 #> 122 -307946.9 3716757   0.079748789        1    0-0.09 #> 123 -307079.1 3716757   0.193353240        3 0.18-0.26 #> 124 -306211.3 3716757   0.239246368        3 0.18-0.26 #> 125 -305343.5 3716757   0.239246368        3 0.18-0.26 #> 126 -304475.8 3716757   0.239246368        3 0.18-0.26 #> 127 -303608.0 3716757   0.239246368        3 0.18-0.26 #> 128 -302740.2 3716757   0.239246368        3 0.18-0.26 #> 129 -301872.4 3716757   0.239246368        3 0.18-0.26 #> 130 -301004.6 3716757   0.239246368        3 0.18-0.26 #> 131 -300136.9 3716757   0.239246368        3 0.18-0.26 #> 132 -299269.1 3716757   0.239246368        3 0.18-0.26 #> 133 -298401.3 3716757   0.239246368        3 0.18-0.26 #> 134 -297533.5 3716757   0.239246368        3 0.18-0.26 #> 135 -296665.8 3716757   0.239246368        3 0.18-0.26 #> 136 -295798.0 3716757   0.239246368        3 0.18-0.26 #> 137 -294930.2 3716757   0.239246368        3 0.18-0.26 #> 138 -294062.4 3716757   0.182230059        3 0.18-0.26 #> 139 -293194.6 3716757   0.160151038        2 0.09-0.18 #> 140 -292326.9 3716757   0.159497579        2 0.09-0.18 #> 141 -291459.1 3716757   0.159497579        2 0.09-0.18 #> 142 -290591.3 3716757   0.159497579        2 0.09-0.18 #> 143 -289723.5 3716757   0.159497579        2 0.09-0.18 #> 144 -288855.7 3716757   0.159497579        2 0.09-0.18 #> 145 -287988.0 3716757   0.159497579        2 0.09-0.18 #> 146 -287120.2 3716757   0.159497579        2 0.09-0.18 #> 147 -286252.4 3716757   0.159497579        2 0.09-0.18 #> 148 -285384.6 3716757   0.159497579        2 0.09-0.18 #> 149 -284516.8 3716757   0.159497579        2 0.09-0.18 #> 150 -283649.1 3716757   0.159497579        2 0.09-0.18 #> 151 -282781.3 3716757   0.154729445        2 0.09-0.18 #> 152 -281913.5 3716757   0.151926090        2 0.09-0.18 #> 153 -281045.7 3716757   0.158509594        2 0.09-0.18 #> 154 -280177.9 3716757   0.159497579        2 0.09-0.18 #> 155 -279310.2 3716757   0.159497579        2 0.09-0.18 #> 156 -278442.4 3716757   0.159497579        2 0.09-0.18 #> 157 -277574.6 3716757   0.159497579        2 0.09-0.18 #> 158 -276706.8 3716757   0.159497579        2 0.09-0.18 #> 159 -275839.0 3716757   0.159497579        2 0.09-0.18 #> 160 -274971.3 3716757   0.159497579        2 0.09-0.18 #> 161 -274103.5 3716757   0.150803965        2 0.09-0.18 #> 162 -273235.7 3716757   0.079748789        1    0-0.09 #> 163 -272367.9 3716757   0.107709343        2 0.09-0.18 #> 164 -271500.1 3716757   0.122051600        2 0.09-0.18 #> 182 -255880.1 3716757   0.154538349        2 0.09-0.18 #> 183 -255012.3 3716757   0.079748789        1    0-0.09 #> 184 -254144.6 3716757   0.056723647        1    0-0.09 #> 185 -253276.8 3716757   0.029423963        1    0-0.09 #> 186 -252409.0 3716757   0.076164475        1    0-0.09 #> 187 -251541.2 3716757   0.030112954        1    0-0.09 #> 203 -237656.8 3716757   0.078354632        1    0-0.09 #> 204 -236789.0 3716757   0.079748789        1    0-0.09 #> 205 -235921.2 3716757   0.079748789        1    0-0.09 #> 206 -235053.4 3716757   0.079748789        1    0-0.09 #> 207 -234185.6 3716757   0.079748789        1    0-0.09 #> 208 -233317.9 3716757   0.079748789        1    0-0.09 #> 209 -232450.1 3716757   0.135780241        2 0.09-0.18 #> 210 -231582.3 3716757   0.159497579        2 0.09-0.18 #> 211 -230714.5 3716757   0.159497579        2 0.09-0.18 #> 212 -229846.7 3716757   0.159497579        2 0.09-0.18 #> 213 -228979.0 3716757   0.133567544        2 0.09-0.18 #> 214 -228111.2 3716757   0.079748789        1    0-0.09 #> 215 -227243.4 3716757   0.079748789        1    0-0.09 #> 216 -226375.6 3716757   0.079748789        1    0-0.09 #> 217 -225507.8 3716757   0.079748789        1    0-0.09 #> 218 -224640.1 3716757   0.079748789        1    0-0.09 #> 219 -223772.3 3716757   0.079748789        1    0-0.09 #> 220 -222904.5 3716757   0.079748789        1    0-0.09 #> 221 -222036.7 3716757   0.079748789        1    0-0.09 #> 222 -221168.9 3716757   0.079748789        1    0-0.09 #> 223 -220301.2 3716757   0.079748789        1    0-0.09 #> 224 -219433.4 3716757   0.079748789        1    0-0.09 #> 225 -218565.6 3716757   0.073239776        1    0-0.09 #> 226 -217697.8 3716757   0.079748789        1    0-0.09 #> 227 -216830.0 3716757   0.059258487        1    0-0.09 #> 228 -215962.3 3716757   0.007571487        1    0-0.09 #> 229 -215094.5 3716757   0.003620904        1    0-0.09 #> 230 -214226.7 3716757   0.000000000        1    0-0.09 #> 231 -213358.9 3716757   0.054829769        1    0-0.09 #> 232 -212491.2 3716757   0.072364685        1    0-0.09 #> 233 -211623.4 3716757   0.079730185        1    0-0.09 #> 234 -210755.6 3716757   0.079748789        1    0-0.09 #> 235 -209887.8 3716757   0.079748789        1    0-0.09 #> 236 -209020.0 3716757   0.079748789        1    0-0.09 #> 237 -208152.3 3716757   0.075053834        1    0-0.09 #> 238 -207284.5 3716757   0.024431994        1    0-0.09 #> 239 -206416.7 3716757   0.076046786        1    0-0.09 #> 240 -205548.9 3716757   0.086404906        1    0-0.09 #> 241 -204681.1 3716757   0.079748789        1    0-0.09 #> 242 -203813.4 3716757   0.079748789        1    0-0.09 #> 243 -202945.6 3716757   0.079748789        1    0-0.09 #> 244 -202077.8 3716757   0.079748789        1    0-0.09 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 550984 rows ] #>"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create basic histogram with categorical data — elsar_plot_distribution","title":"Function to create basic histogram with categorical data — elsar_plot_distribution","text":"Function create basic histogram categorical data","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create basic histogram with categorical data — elsar_plot_distribution","text":"","code":"elsar_plot_distribution(   type = \"ggplot\",   categorical = TRUE,   raster_df = NULL,   col_interest = NULL,   bin_number = 10,   custom_palette = NULL,   show_legend = FALSE,   color_map = \"viridis\" )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create basic histogram with categorical data — elsar_plot_distribution","text":"type character denoting whether \"ggplot\" \"tmap\" used. categorical logical. Whether data categorical (TRUE) continuous (FALSE). raster_df df object data include histogram. col_interest character column interest. Uses \"interval\" nothing provided. bin_number integer value many bins split data (default = 10). custom_palette optional custom palette plotting. Default uses viridis package. show_legend logical. Whether include legend plot . Default FALSE. color_map name viridis palette used. Default \"viridis\".","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create basic histogram with categorical data — elsar_plot_distribution","text":"list ggplot tmap object SpatRaster new background data.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create basic histogram with categorical data — elsar_plot_distribution","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\",   custom_projection = TRUE )  pus <- make_planning_units(boundary_proj = boundary_proj,                            pu_size = NULL,                            pu_threshold = 8.5e5,                            limit_to_mainland = FALSE) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\" wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(raster_in = wad_dat,                                  pus = pus,                                  iso3 = \"NPL\")  plot_cat <- elsar_plot_static_raster_d( raster_in = wadOut, type = \"ggplot_raster\", categorical = FALSE, background = wad_dat, number_categories = 10, data_layer = \"wad_final_cog\", raster_df_out = TRUE, legend_title = \"WAD\" ) #> Plotting input data that is continuous and will be split into categories. #> Adding background layer. #> Extend based on ratio.  plot_wad_cat <- plot_cat[[1]] raster_df_cat <- plot_cat[[2]]   plot_dist_cat <- elsar_plot_distribution(   raster_df = raster_df_cat,   categorical = TRUE )  (plot_wad_cat_inset <- patchwork::wrap_plots((plot_wad_cat +   elsar_plot_optics()) +   patchwork::inset_element(     (plot_dist_cat +       elsar_plot_optics(include_text = FALSE) +       ggplot2::theme(         axis.title = ggplot2::element_blank(),         axis.text.x = ggplot2::element_blank(),         axis.ticks.x = ggplot2::element_blank()       )     ),     left = 0.1, # needs to be changed depending on plot dimensions     bottom = 0.08, # needs to be changed depending on plot dimensions     right = 0.35, # needs to be changed depending on plot dimensions     top = 0.4, # needs to be changed depending on plot dimensions     align_to = \"plot\"   )))"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_extra_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to add additional data to an existing plot — elsar_plot_extra_data","title":"Function to add additional data to an existing plot — elsar_plot_extra_data","text":"elsar_plot_extra_data() allows add extra data existing ggplot tmap plot, e.g. protected areas generated make_protected_areas(). Function idea taken spatialplanr package.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_extra_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to add additional data to an existing plot — elsar_plot_extra_data","text":"","code":"elsar_plot_extra_data(   plot_type = \"ggplot\",   include_pas = NULL,   pas_look = \"contours\",   alpha_pa = 0.5,   color_pa = \"black\",   legend_pa = \"\",   label_pa = \"PAs\" )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_extra_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to add additional data to an existing plot — elsar_plot_extra_data","text":"plot_type character denoting whether \"ggplot\" \"tmap\" used. Needs match main plot include_pas sf object PAs area, e.g. created make_protected_areas() function setting  return_sf = TRUE. pas_look character denoting whether show \"contours\" \"area\" PAs. alpha_pa value (0-1) opacity locked areas plotted top plots. color_pa color value locked areas. legend_pa character value title legend locked areas. Can empty (\"\"). label_pa legend label locked area (e.g. MPAs)","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_extra_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to add additional data to an existing plot — elsar_plot_extra_data","text":"ggplot returns list can simply added ggplot, e.g. elsar_plot_static_raster_c().","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_extra_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to add additional data to an existing plot — elsar_plot_extra_data","text":"","code":"if (FALSE) { boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(   raster_in = wad_dat,   pus = pus,   iso3 = \"NPL\" )  current_pas <- make_protected_areas(   iso3 = \"NPL\",   download_path = here::here(),   buffer_points = TRUE,   return_sf = TRUE,   pus = pus )  wad_plot <- testPlot <- elsar_plot_static_raster_c(   raster_in = wadOut,   type = \"ggplot_raster\",   background = wad_dat,   legend_title = \"wad\" ) +   elsar_plot_extra_data(include_pas = current_pas, color_pa = \"red\") +   elsar_plot_optics()  wad_plot <- testPlot <- elsar_plot_static_raster_c(   raster_in = wadOut,   type = \"ggplot_raster\",   background = wad_dat,   legend_title = \"wad\" ) +   elsar_plot_extra_data(include_pas = current_pas, pas_look = \"area\", color_pa = \"grey\") +   elsar_plot_optics() }"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_optics.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to easily adapt the visual appearance of a plot — elsar_plot_optics","title":"Function to easily adapt the visual appearance of a plot — elsar_plot_optics","text":"elsar_plot_optics() allows use specific themes plotting add north arrows scales wanted.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_optics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to easily adapt the visual appearance of a plot — elsar_plot_optics","text":"","code":"elsar_plot_optics(   type = \"ggplot\",   theme = \"default\",   include_north_scale = FALSE,   include_logo = FALSE,   logo_path = \"man/figures/elsaR_hex_sticker.png\",   logo_dim = c(60, 60),   logo_pos,   include_text = TRUE,   text_to_display = \"UNBL | www.unbiodiversitylab.org\",   text_location = \"bottom_right\",   move_horizontal = NULL,   move_vertical = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_optics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to easily adapt the visual appearance of a plot — elsar_plot_optics","text":"type character denoting whether \"ggplot\" \"tmap\" used. Needs match main plot theme ggplot allows use pre-defined \"deafult\" plot theme provide custom one list. include_north_scale Logical. Determines whether north arrow scale added. include_logo Logical. Whether include logo (.png image) plot logo_path path png file logo saved (e.g. \"man/figures/elsaR_hex_sticker.png\") logo_dim vector desired width height image. Default c(60, 60). logo_pos vector desired position image (xmin, xmax, ymin, ymax). include_text Logical. Whether include text plot (e.g. website). text_to_display text display. Dafult \"UNBL | www.unbiodiversitylab.org\", text_location location text. Options \"bottom_right\" (default), \"top_right\", \"top_left\" \"bottom_left\". move_horizontal setting text location, attribute allows move text block horizontally needed. move_vertical setting text location, attribute allows move text block vertically needed.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_optics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to easily adapt the visual appearance of a plot — elsar_plot_optics","text":"ggplot returns list can simply added ggplot, e.g. elsar_plot_static_raster_c().","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_optics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to easily adapt the visual appearance of a plot — elsar_plot_optics","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\" wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(   raster_in = wad_dat,   pus = pus,   iso3 = \"NPL\" ) wad_plot <- testPlot <- elsar_plot_static_raster_c(   raster_in = wadOut,   type = \"ggplot_raster\",   background = wad_dat,   legend_title = \"wad\" ) + elsar_plot_optics() #> Adding background layer. #> Extend based on ratio."},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a static plot from raster data with continuous data — elsar_plot_static_raster_c","title":"Function to create a static plot from raster data with continuous data — elsar_plot_static_raster_c","text":"elsar_plot_static_raster_c() allows plot continuous data SpatRaster ggplot tmap. can combined elsar_plot_optics() elsar_plot_extra_data() create reproducible plots.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a static plot from raster data with continuous data — elsar_plot_static_raster_c","text":"","code":"elsar_plot_static_raster_c(   raster_in,   type = \"ggplot_vector\",   background = NULL,   extend_background = 0.05,   custom_palette = NULL,   plot_title = \"\",   legend_title = NULL,   color_map = \"viridis\",   expand_plot = FALSE,   raster_df_out = FALSE )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a static plot from raster data with continuous data — elsar_plot_static_raster_c","text":"raster_in SpatRaster file plotted. type character plot type. Either \"ggplot_vector\", \"ggplot_raster\" \"tmap\". background Requires SpatRaster input (preferably data raster_in) plot background data. extend_background numerical value allows extent background beyond extent raster_in. extend_background <= 1, lat lon extend extended ratio provided (e.g. 0.05 extend 5%). extend_background > 1 sides extended absolute value provided. custom_palette optional custom palette plotting. Default uses viridis package. plot_title optional plot title. legend_title optional legend title. color_map name viridis palette used. Default \"viridis\". expand_plot logical. Whether expand plot, space betwen border plot. raster_df_out logical. Whether return plot (FALSE) also data frame behind plot (TRUE). Needed elsar_plot_distribution()","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a static plot from raster data with continuous data — elsar_plot_static_raster_c","text":"ggplot tmap object.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a static plot from raster data with continuous data — elsar_plot_static_raster_c","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\" wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(   raster_in = wad_dat,   pus = pus,   iso3 = \"NPL\" ) (wad_plot <- elsar_plot_static_raster_c(   raster_in = wadOut,   type = \"ggplot_raster\",   background = wad_dat,   legend_title = \"wad\" )) #> Adding background layer. #> Extend based on ratio."},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a static plot from raster data with discrete data — elsar_plot_static_raster_d","title":"Function to create a static plot from raster data with discrete data — elsar_plot_static_raster_d","text":"elsar_plot_static_raster_d() allows plot discrete data SpatRaster ggplot tmap. can combined elsar_plot_optics() elsar_plot_extra_data() create reproducible plots.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a static plot from raster data with discrete data — elsar_plot_static_raster_d","text":"","code":"elsar_plot_static_raster_d(   raster_in,   type = \"ggplot_vector\",   categorical = FALSE,   number_categories = 10,   data_layer = NULL,   background = NULL,   extend_background = 0.05,   custom_palette = NULL,   plot_title = \"\",   legend_title = NULL,   color_map = \"viridis\",   expand_plot = FALSE,   raster_df_out = FALSE )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a static plot from raster data with discrete data — elsar_plot_static_raster_d","text":"raster_in SpatRaster file plotted. type character plot type. Either \"ggplot_vector\", \"ggplot_raster\" \"tmap\". categorical logical. data categorical (TRUE), convert factor (yet) use number categories given. number_categories data pre-defined categories, many categories split continuous data data_layer character data layer used. background Requires SpatRaster input (preferably data raster_in) plot background data. extend_background numerical value allows extent background beyond extent raster_in. extend_background <= 1, lat lon extend extended ratio provided (e.g. 0.05 extend 5%). extend_background > 1 sides extended absolute value provided. custom_palette optional custom palette plotting. Default uses viridis package. plot_title optional plot title. legend_title optional legend title. color_map name viridis palette used. Default \"viridis\". expand_plot logical. Whether expand plot, space betwen border plot. raster_df_out logical. Whether return plot (FALSE) also data frame behind plot (TRUE). Needed elsar_plot_distribution()","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a static plot from raster data with discrete data — elsar_plot_static_raster_d","text":"Either ggplot object list ggplot df created.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsar_plot_static_raster_d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a static plot from raster data with discrete data — elsar_plot_static_raster_d","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE ) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\" wad_dat <- get_wad_data()  wadOut <- make_normalised_raster(   raster_in = wad_dat,   pus = pus,   iso3 = \"NPL\" )  (plot_cat <- elsar_plot_static_raster_d(raster_in = wadOut, type = \"ggplot_raster\", categorical = FALSE, number_categories = 10, background = wad_dat, data_layer = \"wad_final_cog\", raster_df_out = TRUE) ) #> Plotting input data that is continuous and will be split into categories. #> Adding background layer. #> Extend based on ratio. #> [[1]]  #>  #> [[2]] #>             x       y wad_final_cog category interval #> 1   -375177.9 3693059     0.0000000        1    0-0.1 #> 2   -374727.9 3693059     0.0000000        1    0-0.1 #> 3   -374277.9 3693059     0.0000000        1    0-0.1 #> 4   -373827.9 3693059     0.0000000        1    0-0.1 #> 5   -373377.9 3693059     0.0000000        1    0-0.1 #> 6   -372927.9 3693059     0.0000000        1    0-0.1 #> 7   -372477.9 3693059     0.0000000        1    0-0.1 #> 8   -372027.9 3693059     0.0000000        1    0-0.1 #> 9   -371577.9 3693059     0.0000000        1    0-0.1 #> 10  -371127.9 3693059     0.0000000        1    0-0.1 #> 11  -370677.9 3693059     0.5454545        6  0.5-0.6 #> 12  -370227.9 3693059     0.5454545        6  0.5-0.6 #> 13  -369777.9 3693059     0.5454545        6  0.5-0.6 #> 14  -369327.9 3693059     0.5454545        6  0.5-0.6 #> 15  -368877.9 3693059     0.5454545        6  0.5-0.6 #> 16  -368427.9 3693059     0.6363636        7  0.6-0.7 #> 17  -367977.9 3693059     0.6363636        7  0.6-0.7 #> 18  -367527.9 3693059     0.6363636        7  0.6-0.7 #> 19  -367077.9 3693059     0.6363636        7  0.6-0.7 #> 20  -366627.9 3693059     0.6363636        7  0.6-0.7 #> 21  -366177.9 3693059     0.6363636        7  0.6-0.7 #> 22  -365727.9 3693059     0.6363636        7  0.6-0.7 #> 23  -365277.9 3693059     0.6363636        7  0.6-0.7 #> 24  -364827.9 3693059     0.5454545        6  0.5-0.6 #> 25  -364377.9 3693059     0.5454545        6  0.5-0.6 #> 26  -363927.9 3693059     0.5454545        6  0.5-0.6 #> 27  -363477.9 3693059     0.5454545        6  0.5-0.6 #> 28  -363027.9 3693059     0.5454545        6  0.5-0.6 #> 29  -362577.9 3693059     0.5454545        6  0.5-0.6 #> 30  -362127.9 3693059     0.5454545        6  0.5-0.6 #> 31  -361677.9 3693059     0.6363636        7  0.6-0.7 #> 32  -361227.9 3693059     0.6363636        7  0.6-0.7 #> 33  -360777.9 3693059     0.6363636        7  0.6-0.7 #> 34  -360327.9 3693059     0.6363636        7  0.6-0.7 #> 35  -359877.9 3693059     0.6363636        7  0.6-0.7 #> 36  -359427.9 3693059     0.5454545        6  0.5-0.6 #> 37  -358977.9 3693059     0.5454545        6  0.5-0.6 #> 38  -358527.9 3693059     0.5454545        6  0.5-0.6 #> 39  -358077.9 3693059     0.5454545        6  0.5-0.6 #> 40  -357627.9 3693059     0.0000000        1    0-0.1 #> 41  -357177.9 3693059     0.0000000        1    0-0.1 #> 42  -356727.9 3693059     0.0000000        1    0-0.1 #> 43  -356277.9 3693059     0.0000000        1    0-0.1 #> 44  -355827.9 3693059     0.0000000        1    0-0.1 #> 45  -355377.9 3693059     0.0000000        1    0-0.1 #> 46  -354927.9 3693059     0.0000000        1    0-0.1 #> 47  -354477.9 3693059     0.0000000        1    0-0.1 #> 48  -354027.9 3693059     0.0000000        1    0-0.1 #> 49  -353577.9 3693059     0.0000000        1    0-0.1 #> 50  -353127.9 3693059     0.0000000        1    0-0.1 #> 51  -352677.9 3693059     0.0000000        1    0-0.1 #> 52  -352227.9 3693059     0.0000000        1    0-0.1 #> 53  -351777.9 3693059     0.0000000        1    0-0.1 #> 54  -351327.9 3693059     0.0000000        1    0-0.1 #> 55  -350877.9 3693059     0.0000000        1    0-0.1 #> 56  -350427.9 3693059     0.0000000        1    0-0.1 #> 57  -349977.9 3693059     0.0000000        1    0-0.1 #> 58  -349527.9 3693059     0.0000000        1    0-0.1 #> 59  -349077.9 3693059     0.0000000        1    0-0.1 #> 60  -348627.9 3693059     0.0000000        1    0-0.1 #> 61  -348177.9 3693059     0.0000000        1    0-0.1 #> 62  -347727.9 3693059     0.0000000        1    0-0.1 #> 63  -347277.9 3693059     0.0000000        1    0-0.1 #> 64  -346827.9 3693059     0.0000000        1    0-0.1 #> 65  -346377.9 3693059     0.4545455        5  0.4-0.5 #> 66  -345927.9 3693059     0.4545455        5  0.4-0.5 #> 67  -345477.9 3693059     0.4545455        5  0.4-0.5 #> 68  -345027.9 3693059     0.4545455        5  0.4-0.5 #> 69  -344577.9 3693059     0.4545455        5  0.4-0.5 #> 70  -344127.9 3693059     0.4545455        5  0.4-0.5 #> 71  -343677.9 3693059     0.4545455        5  0.4-0.5 #> 72  -343227.9 3693059     0.3636364        4  0.3-0.4 #> 73  -342777.9 3693059     0.3636364        4  0.3-0.4 #> 74  -342327.9 3693059     0.4545455        5  0.4-0.5 #> 75  -341877.9 3693059     0.5454545        6  0.5-0.6 #> 76  -341427.9 3693059     0.5454545        6  0.5-0.6 #> 77  -340977.9 3693059     0.4545455        5  0.4-0.5 #> 78  -340527.9 3693059     0.4545455        5  0.4-0.5 #> 79  -340077.9 3693059     0.4545455        5  0.4-0.5 #> 80  -339627.9 3693059     0.5454545        6  0.5-0.6 #> 81  -339177.9 3693059     0.5454545        6  0.5-0.6 #> 82  -338727.9 3693059     0.5454545        6  0.5-0.6 #> 83  -338277.9 3693059     0.5454545        6  0.5-0.6 #> 84  -337827.9 3693059     0.5454545        6  0.5-0.6 #> 85  -337377.9 3693059     0.5454545        6  0.5-0.6 #> 86  -336927.9 3693059     0.5454545        6  0.5-0.6 #> 87  -336477.9 3693059     0.4545455        5  0.4-0.5 #> 88  -336027.9 3693059     0.4545455        5  0.4-0.5 #> 89  -335577.9 3693059     0.4545455        5  0.4-0.5 #> 90  -335127.9 3693059     0.4545455        5  0.4-0.5 #> 91  -334677.9 3693059     0.4545455        5  0.4-0.5 #> 92  -334227.9 3693059     0.4545455        5  0.4-0.5 #> 93  -333777.9 3693059     0.4545455        5  0.4-0.5 #> 94  -333327.9 3693059     0.5454545        6  0.5-0.6 #> 95  -332877.9 3693059     0.5454545        6  0.5-0.6 #> 96  -332427.9 3693059     0.5454545        6  0.5-0.6 #> 97  -331977.9 3693059     0.4545455        5  0.4-0.5 #> 98  -331527.9 3693059     0.4545455        5  0.4-0.5 #> 99  -331077.9 3693059     0.4545455        5  0.4-0.5 #> 100 -330627.9 3693059     0.4545455        5  0.4-0.5 #> 101 -330177.9 3693059     0.4545455        5  0.4-0.5 #> 102 -329727.9 3693059     0.4545455        5  0.4-0.5 #> 103 -329277.9 3693059     0.4545455        5  0.4-0.5 #> 104 -328827.9 3693059     0.4545455        5  0.4-0.5 #> 105 -328377.9 3693059     0.4545455        5  0.4-0.5 #> 106 -327927.9 3693059     0.0000000        1    0-0.1 #> 107 -327477.9 3693059     0.0000000        1    0-0.1 #> 108 -327027.9 3693059     0.0000000        1    0-0.1 #> 109 -326577.9 3693059     0.0000000        1    0-0.1 #> 110 -326127.9 3693059     0.0000000        1    0-0.1 #> 111 -325677.9 3693059     0.4545455        5  0.4-0.5 #> 112 -325227.9 3693059     0.4545455        5  0.4-0.5 #> 113 -324777.9 3693059     0.4545455        5  0.4-0.5 #> 114 -324327.9 3693059     0.4545455        5  0.4-0.5 #> 115 -323877.9 3693059     0.4545455        5  0.4-0.5 #> 116 -323427.9 3693059     0.4545455        5  0.4-0.5 #> 117 -322977.9 3693059     0.4545455        5  0.4-0.5 #> 118 -322527.9 3693059     0.3636364        4  0.3-0.4 #> 119 -322077.9 3693059     0.3636364        4  0.3-0.4 #> 120 -321627.9 3693059     0.3636364        4  0.3-0.4 #> 121 -321177.9 3693059     0.4545455        5  0.4-0.5 #> 122 -320727.9 3693059     0.4545455        5  0.4-0.5 #> 123 -320277.9 3693059     0.4545455        5  0.4-0.5 #> 124 -319827.9 3693059     0.4545455        5  0.4-0.5 #> 125 -319377.9 3693059     0.4545455        5  0.4-0.5 #> 126 -318927.9 3693059     0.4545455        5  0.4-0.5 #> 127 -318477.9 3693059     0.4545455        5  0.4-0.5 #> 128 -318027.9 3693059     0.4545455        5  0.4-0.5 #> 129 -317577.9 3693059     0.4545455        5  0.4-0.5 #> 130 -317127.9 3693059     0.4545455        5  0.4-0.5 #> 131 -316677.9 3693059     0.4545455        5  0.4-0.5 #> 132 -316227.9 3693059     0.4545455        5  0.4-0.5 #> 133 -315777.9 3693059     0.4545455        5  0.4-0.5 #> 134 -315327.9 3693059     0.4545455        5  0.4-0.5 #> 135 -314877.9 3693059     0.4545455        5  0.4-0.5 #> 136 -314427.9 3693059     0.3636364        4  0.3-0.4 #> 137 -313977.9 3693059     0.3636364        4  0.3-0.4 #> 138 -313527.9 3693059     0.0000000        1    0-0.1 #> 139 -313077.9 3693059     0.0000000        1    0-0.1 #> 140 -312627.9 3693059     0.0000000        1    0-0.1 #> 141 -312177.9 3693059     0.0000000        1    0-0.1 #> 142 -311727.9 3693059     0.0000000        1    0-0.1 #> 143 -311277.9 3693059     0.0000000        1    0-0.1 #> 144 -310827.9 3693059     0.0000000        1    0-0.1 #> 145 -310377.9 3693059     0.1818182        2  0.1-0.2 #> 146 -309927.9 3693059     0.0000000        1    0-0.1 #> 147 -309477.9 3693059     0.0000000        1    0-0.1 #> 148 -309027.9 3693059     0.3636364        4  0.3-0.4 #> 149 -308577.9 3693059     0.3636364        4  0.3-0.4 #> 150 -308127.9 3693059     0.3636364        4  0.3-0.4 #> 151 -307677.9 3693059     0.3636364        4  0.3-0.4 #> 152 -307227.9 3693059     0.3636364        4  0.3-0.4 #> 153 -306777.9 3693059     0.3636364        4  0.3-0.4 #> 154 -306327.9 3693059     0.3636364        4  0.3-0.4 #> 155 -305877.9 3693059     0.3636364        4  0.3-0.4 #> 156 -305427.9 3693059     0.3636364        4  0.3-0.4 #> 157 -304977.9 3693059     0.2727273        3  0.2-0.3 #> 158 -304527.9 3693059     0.3636364        4  0.3-0.4 #> 159 -304077.9 3693059     0.3636364        4  0.3-0.4 #> 160 -303627.9 3693059     0.3636364        4  0.3-0.4 #> 161 -303177.9 3693059     0.3636364        4  0.3-0.4 #> 162 -302727.9 3693059     0.3636364        4  0.3-0.4 #> 163 -302277.9 3693059     0.3636364        4  0.3-0.4 #> 164 -301827.9 3693059     0.3636364        4  0.3-0.4 #> 165 -301377.9 3693059     0.3636364        4  0.3-0.4 #> 166 -300927.9 3693059     0.3636364        4  0.3-0.4 #> 167 -300477.9 3693059     0.3636364        4  0.3-0.4 #> 168 -300027.9 3693059     0.3636364        4  0.3-0.4 #> 169 -299577.9 3693059     0.3636364        4  0.3-0.4 #> 170 -299127.9 3693059     0.3636364        4  0.3-0.4 #> 171 -298677.9 3693059     0.3636364        4  0.3-0.4 #> 172 -298227.9 3693059     0.3636364        4  0.3-0.4 #> 173 -297777.9 3693059     0.3636364        4  0.3-0.4 #> 174 -297327.9 3693059     0.3636364        4  0.3-0.4 #> 175 -296877.9 3693059     0.3636364        4  0.3-0.4 #> 176 -296427.9 3693059     0.3636364        4  0.3-0.4 #> 177 -295977.9 3693059     0.2727273        3  0.2-0.3 #> 178 -295527.9 3693059     0.2727273        3  0.2-0.3 #> 179 -295077.9 3693059     0.2727273        3  0.2-0.3 #> 180 -294627.9 3693059     0.3636364        4  0.3-0.4 #> 181 -294177.9 3693059     0.3636364        4  0.3-0.4 #> 182 -293727.9 3693059     0.4545455        5  0.4-0.5 #> 183 -293277.9 3693059     0.4545455        5  0.4-0.5 #> 184 -292827.9 3693059     0.4545455        5  0.4-0.5 #> 185 -292377.9 3693059     0.3636364        4  0.3-0.4 #> 186 -291927.9 3693059     0.3636364        4  0.3-0.4 #> 187 -291477.9 3693059     0.3636364        4  0.3-0.4 #> 188 -291027.9 3693059     0.3636364        4  0.3-0.4 #> 189 -290577.9 3693059     0.3636364        4  0.3-0.4 #> 190 -290127.9 3693059     0.5454545        6  0.5-0.6 #> 191 -289677.9 3693059     0.5454545        6  0.5-0.6 #> 192 -289227.9 3693059     0.4545455        5  0.4-0.5 #> 193 -288777.9 3693059     0.4545455        5  0.4-0.5 #> 194 -288327.9 3693059     0.3636364        4  0.3-0.4 #> 195 -287877.9 3693059     0.3636364        4  0.3-0.4 #> 196 -287427.9 3693059     0.3636364        4  0.3-0.4 #> 197 -286977.9 3693059     0.4545455        5  0.4-0.5 #> 198 -286527.9 3693059     0.4545455        5  0.4-0.5 #> 199 -286077.9 3693059     0.4545455        5  0.4-0.5 #> 200 -285627.9 3693059     0.4545455        5  0.4-0.5 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 1779097 rows ] #>"},{"path":"https://elsa-undp.github.io/elsar/reference/elsa_plot_output_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Map of the ELSA output to download with GIS layers — elsa_plot_output_map","title":"Create a Map of the ELSA output to download with GIS layers — elsa_plot_output_map","text":"function gives quick way getting map immediately downloading output GIS layers.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsa_plot_output_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Map of the ELSA output to download with GIS layers — elsa_plot_output_map","text":"","code":"elsa_plot_output_map(elsa_raster, ELSA_text, pu0)"},{"path":"https://elsa-undp.github.io/elsar/reference/elsa_plot_output_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Map of the ELSA output to download with GIS layers — elsa_plot_output_map","text":"elsa_raster SpatRasterwith one layer contains different categories different zones. ELSA_text tbl_df containing translations displayed text plot. pu0 SpatRaster possible planning units planning region (one layer)","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsa_plot_output_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Map of the ELSA output to download with GIS layers — elsa_plot_output_map","text":"ggplot object map prioritization output","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsa_plot_representation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bar Plot of Feature Representation — elsa_plot_representation","title":"Create a Bar Plot of Feature Representation — elsa_plot_representation","text":"function generates stacked bar plot displaying representation input feature, broken specified actions (e.g., \"Protect,\" \"Restore,\" \"Manage,\" optionally \"Urban Greening\").","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsa_plot_representation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bar Plot of Feature Representation — elsa_plot_representation","text":"","code":"elsa_plot_representation(   feature_rep_tabl,   input,   ELSA_text,   pal.elsa = tibble::tibble(colour = c(\"#4daf4a\", \"#984ea3\", \"#377eb8\", \"#adaf4a\",     \"#FFFFFF00\"), category = c(\"Protect\", \"Restore\", \"Manage\", \"PR\", \"Do_Nothing\")) )"},{"path":"https://elsa-undp.github.io/elsar/reference/elsa_plot_representation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bar Plot of Feature Representation — elsa_plot_representation","text":"feature_rep_tabl dataframe containing representation values feature. Columns include numeric data feature action. input input object R Shiny app containing budget information action. used label budget percentage action plot legend. ELSA_text tbl_df containing translations displayed text plot. pal.elsa tibble palette information plot","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/elsa_plot_representation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bar Plot of Feature Representation — elsa_plot_representation","text":"ggplot object stacked bar chart showing feature representation percentages.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/exact_rasterise.html","id":null,"dir":"Reference","previous_headings":"","what":"Efficient Rasterization of polygon features with Coverage Fraction, based on some attribute — exact_rasterise","title":"Efficient Rasterization of polygon features with Coverage Fraction, based on some attribute — exact_rasterise","text":"Rasterises vector features using attribute values actual coverage fraction planning unit (PU) layer. method optimized speed precision, allowing faster rasterisation standard rasterize() functions, polygons dataset may overlap attributes map.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/exact_rasterise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Efficient Rasterization of polygon features with Coverage Fraction, based on some attribute — exact_rasterise","text":"","code":"exact_rasterise(features, attribute, pu_layer, fun = sum)"},{"path":"https://elsa-undp.github.io/elsar/reference/exact_rasterise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Efficient Rasterization of polygon features with Coverage Fraction, based on some attribute — exact_rasterise","text":"features spatial feature object (e.g., sf SpatVector) containing vector features rasterised. attribute string representing column name features used assign values raster cell. pu_layer raster layer (planning unit) defines resolution extent rasterization. fun function used aggregate values overlapping layers (default sum). functions, like mean, can also used.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/exact_rasterise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Efficient Rasterization of polygon features with Coverage Fraction, based on some attribute — exact_rasterise","text":"raster stack layer representing rasterized attribute feature, based attribute. multiple features present, specified aggregation function applied across stack produce single layer.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/exact_rasterise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Efficient Rasterization of polygon features with Coverage Fraction, based on some attribute — exact_rasterise","text":"","code":"if (FALSE) { # Rasterize using the 'value' attribute with sum aggregation exact_rasterise(features = my_features, attribute = \"value\", pu_layer = my_raster, fun = sum) }"},{"path":"https://elsa-undp.github.io/elsar/reference/extract_filename_filetype.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the file name and file type of data in the local path — extract_filename_filetype","title":"Extract the file name and file type of data in the local path — extract_filename_filetype","text":"helper function used wrapper function load local data (can extended later work postgres).","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/extract_filename_filetype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the file name and file type of data in the local path — extract_filename_filetype","text":"","code":"extract_filename_filetype(data_name, file_path)"},{"path":"https://elsa-undp.github.io/elsar/reference/extract_filename_filetype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the file name and file type of data in the local path — extract_filename_filetype","text":"data_name name data interest (needs way provided file name) file_path local path data saved.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/extract_filename_filetype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the file name and file type of data in the local path — extract_filename_filetype","text":"list form dictionary contains \"filename\" \"filetype\". Can used inputs elsar_load_data().","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_all_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function to get a raster file with all wanted features — get_all_features","title":"Wrapper function to get a raster file with all wanted features — get_all_features","text":"Wrapper function get raster file wanted features","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_all_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function to get a raster file with all wanted features — get_all_features","text":"","code":"get_all_features(feature_list, path_in, pus, iso3, output_path = NULL, ...)"},{"path":"https://elsa-undp.github.io/elsar/reference/get_all_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function to get a raster file with all wanted features — get_all_features","text":"feature_list list features wanted downstream ELSA workflow. path_in common path data can found. pus SpatRaster file contains reference spatial extent, crs etc.form planning units iso3 string iso3 name data (country name) output_path optional output path created files. ... Additional attributes needed functions wanted.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_all_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function to get a raster file with all wanted features — get_all_features","text":"SpatRaster length feature_list + 1 since planning units first layer.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_all_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function to get a raster file with all wanted features — get_all_features","text":"","code":"if (FALSE) { feature_list <- c(\"fml\", \"cropsuit\", \"fi\")  all_feats <- get_all_features(feature_list = feature_list,                               path_in = \"<yourpath>\",                               pus = pus,                               iso3 = \"NPL\") }"},{"path":"https://elsa-undp.github.io/elsar/reference/get_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate country areal coverage (as a percentage) of an input binary layer, likely representing a zone. — get_coverage","title":"Calculate country areal coverage (as a percentage) of an input binary layer, likely representing a zone. — get_coverage","text":"Calculate country areal coverage (percentage) input binary layer, likely representing zone.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate country areal coverage (as a percentage) of an input binary layer, likely representing a zone. — get_coverage","text":"","code":"get_coverage(zone_layer, pu_layer)"},{"path":"https://elsa-undp.github.io/elsar/reference/get_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate country areal coverage (as a percentage) of an input binary layer, likely representing a zone. — get_coverage","text":"zone_layer binary spatRast representing zone protected area type feature. pu_layer binary spatRast representing planning units.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate country areal coverage (as a percentage) of an input binary layer, likely representing a zone. — get_coverage","text":"vector areal targets length 1.","code":""},{"path":[]},{"path":"https://elsa-undp.github.io/elsar/reference/get_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate country areal coverage (as a percentage) of an input binary layer, likely representing a zone. — get_coverage","text":"","code":"if (FALSE) {    get_coverage(PA, pu)    get_coverage(zone_protect, pu)    get_coverage(zone_manage, pu) }"},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Percentage Area Coverage for a Given Zone — get_elsa_coverage","title":"Calculate the Percentage Area Coverage for a Given Zone — get_elsa_coverage","text":"function calculates percentage total area covered specific zone (e.g., protected areas, managed areas) relative entire planning unit (PU) layer. returns areal coverage percentage.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Percentage Area Coverage for a Given Zone — get_elsa_coverage","text":"","code":"get_elsa_coverage(zone_layer, pu_layer)"},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Percentage Area Coverage for a Given Zone — get_elsa_coverage","text":"zone_layer terra raster object representing specific zone (e.g., protected managed areas) coverage percentage calculated. pu_layer terra raster object representing total planning units (PU) layer defines entire area interest.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Percentage Area Coverage for a Given Zone — get_elsa_coverage","text":"numeric value representing percentage coverage zone_layer relative pu_layer.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Percentage Area Coverage for a Given Zone — get_elsa_coverage","text":"function uses terra::global() calculate sum values zone PU layers, ignoring missing values (NAs), computes percentage zone's total area relative PU's total area.","code":""},{"path":[]},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Percentage Area Coverage for a Given Zone — get_elsa_coverage","text":"","code":"if (FALSE) { # Calculate coverage for protected areas get_coverage(PA, pu) # Calculate coverage for protected zones get_coverage(zone_protect, pu) # Calculate coverage for managed zones get_coverage(zone_manage, pu) }"},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_min_lockin_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Minimum Lock-in Targets for Zones — get_elsa_min_lockin_target","title":"Get Minimum Lock-in Targets for Zones — get_elsa_min_lockin_target","text":"function calculates minimum lock-targets different zones (e.g., protect, restore, manage, optionally green). compares input targets minimum coverage needed zone ensures target set threshold.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_min_lockin_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Minimum Lock-in Targets for Zones — get_elsa_min_lockin_target","text":"","code":"get_elsa_min_lockin_target(lockin, input, pu)"},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_min_lockin_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Minimum Lock-in Targets for Zones — get_elsa_min_lockin_target","text":"lockin raster list rasters representing locked-areas zone. input list dataframe containing target values zone (e.g., zone_1_target, zone_2_target, etc.). pu raster layer representing planning unit used calculating coverage.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_min_lockin_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Minimum Lock-in Targets for Zones — get_elsa_min_lockin_target","text":"tibble containing adjusted target values zone.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Get country-specific target value based on the total area of planning units (PU) — get_elsa_target","title":"Get country-specific target value based on the total area of planning units (PU) — get_elsa_target","text":"function calculates target value taking percentage total area represented planning units (PU). result rounded nearest whole number, calculated target zero, small value (1e-4) returned avoid issues zero targets.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get country-specific target value based on the total area of planning units (PU) — get_elsa_target","text":"","code":"get_elsa_target(PU = NULL, target = NULL)"},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get country-specific target value based on the total area of planning units (PU) — get_elsa_target","text":"PU terra raster object representing planning units, total area calculated. target numeric value representing percentage target (e.g., 10 10%).","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get country-specific target value based on the total area of planning units (PU) — get_elsa_target","text":"numeric value representing target area. calculated target zero, function returns small value (1e-4) ensure non-zero target.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/get_elsa_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get country-specific target value based on the total area of planning units (PU) — get_elsa_target","text":"","code":"if (FALSE) { # Example usage with a raster of planning units and a target of 10% get_target(PU = my_planning_units_raster, target = 10) }"},{"path":"https://elsa-undp.github.io/elsar/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load different types of data — load_data","title":"Load different types of data — load_data","text":"Load different types data","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load different types of data — load_data","text":"","code":"load_data(   file_name,   file_path = NULL,   file_lyr = NULL,   file_type,   db_info,   iso3_column = \"iso3cd\",   iso3 )"},{"path":"https://elsa-undp.github.io/elsar/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load different types of data — load_data","text":"file_name character file name. Needs contain file type ending (e.g. .tif) loading local source. file_path path local file stored. Needs NULL using postgres. file_lyr optional. Layer information data. file_type character file type. Current options : \"postgres\", \"shp\", \"gpkg\", \"geojson\", \"tif\", \"tiff\", \"grd\", \"gri\", \"nc\", \"hdf\" db_info list style dictionary. needed file_type = \"postgres\". Needs following structure information: postgres_dict <- c(host = \"\", dbname =\"\", port = , user = \"\", password = \"\") iso3_column relevant file_type \"postgres\" selected. string name iso3 information can found dataset. iso3 iso3 country code (character) country interest.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load different types of data — load_data","text":"loaded data either SpatRaster sf object","code":""},{"path":[]},{"path":"https://elsa-undp.github.io/elsar/reference/make_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a boundary of the planning region — make_boundary","title":"Create a boundary of the planning region — make_boundary","text":"Create boundary planning region","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a boundary of the planning region — make_boundary","text":"","code":"make_boundary(   boundary_in,   input_type = \"sf\",   limit_to_mainland = FALSE,   col_name = NULL,   filter_out = 0,   custom_projection = TRUE,   iso3 = NULL,   iso3_column = NULL,   output_path = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a boundary of the planning region — make_boundary","text":"boundary_in file containing boundary information. Can sf SpatRaster input_type string either \"sf\" \"SpatRaster\" (default \"sf\"). limit_to_mainland Logical. Limits extent data mainland. col_name string column containing actual extent planning region (outside area). Can NULL. filter_out value representing outside area data (e.g. 0) custom_projection Logical. TRUEif custom projection planning region wanted. iso3 iso3 country code (character) country interest. iso3_column relevant iso3 != NULL. string name iso3 information can found dataset. output_path optional output path created file. needed custom_projection = TRUE.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a boundary of the planning region — make_boundary","text":"sf object boundary planning region","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_boundary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a boundary of the planning region — make_boundary","text":"","code":"boundary <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_custom_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom projection based on the planning region — make_custom_projection","title":"Create a custom projection based on the planning region — make_custom_projection","text":"Create custom projection based planning region","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_custom_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom projection based on the planning region — make_custom_projection","text":"","code":"make_custom_projection(   boundary,   output_path = NULL,   iso3_column = \"iso3cd\",   iso3 = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_custom_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom projection based on the planning region — make_custom_projection","text":"boundary sf object boundary planning region. match iso3 country code. output_path optional output path created file. iso3_column string name iso3 information can found dataset. iso3 iso3 country code (character) country interest.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_custom_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a custom projection based on the planning region — make_custom_projection","text":"wkt file centred planning region","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_custom_projection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom projection based on the planning region — make_custom_projection","text":"","code":"boundary <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  wkt <- make_custom_projection(boundary = boundary, iso3 = \"NPL\")"},{"path":"https://elsa-undp.github.io/elsar/reference/make_forest_integrity.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the forest integrity index using flii and fsii data — make_forest_integrity","title":"Create the forest integrity index using flii and fsii data — make_forest_integrity","text":"Create forest integrity index using flii fsii data","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_forest_integrity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the forest integrity index using flii and fsii data — make_forest_integrity","text":"","code":"make_forest_integrity(   raster_flii = NULL,   raster_fsii = NULL,   pus,   iso3,   output_path = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_forest_integrity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the forest integrity index using flii and fsii data — make_forest_integrity","text":"raster_flii SpatRaster file flii information. raster_fsii SpatRaster file fsii information. pus SpatRaster file contains reference spatial extent, crs etc.form planning units iso3 string iso3 name data (country name) output_path optional output path created file.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_forest_integrity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the forest integrity index using flii and fsii data — make_forest_integrity","text":"SpatRaster file forest integrity index aligned normalised","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_forest_integrity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the forest integrity index using flii and fsii data — make_forest_integrity","text":"","code":"if (FALSE) { forest_integrity1 <- make_forest_integrity(   raster_flii = raster_flii,   pus = pus )  forest_integrity2 <- make_forest_integrity(   raster_fsii = raster_fsii,   pus = pus )  forest_integrity3 <- make_forest_integrity(   raster_flii = raster_flii,   raster_fsii = raster_fsii,   pus = pus )  zero_fsii <- raster_fsii zero_fsii[zero_fsii < 14] = 0  forest_integrity4 <- make_forest_integrity(   raster_flii = raster_flii,   raster_fsii = raster_fsii,   pus = pus )  }"},{"path":"https://elsa-undp.github.io/elsar/reference/make_managed_forests.html","id":null,"dir":"Reference","previous_headings":"","what":"Create managed forests data layer — make_managed_forests","title":"Create managed forests data layer — make_managed_forests","text":"Create managed forests data layer","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_managed_forests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create managed forests data layer — make_managed_forests","text":"","code":"make_managed_forests(   raster_in,   pus,   iso3,   manual_cats = NULL,   include_disturbed_forest = FALSE,   name_out,   output_path = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_managed_forests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create managed forests data layer — make_managed_forests","text":"raster_in SpatRaster file contains data put right format pus SpatRaster file contains reference spatial extent, crs etc.form planning units iso3 string iso3 name data (country name) manual_cats file contain default categories (11 (managed), 20 (disturbed forests; can interpreted managed), 31, 32, 40, 53 (managed)), allows provide vector right values. include_disturbed_forest logical. Whether include disturbed forests managed forests (default FALSE). name_out string data name used output tiffile output_path optional output path created file.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_managed_forests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create managed forests data layer — make_managed_forests","text":"SpatRaster file managed forests aligned normalised","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_managed_forests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create managed forests data layer — make_managed_forests","text":"","code":"if (FALSE) { boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\",   do_project = TRUE )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE )  managed_forests <- make_managed_forests(   raster_in = forests_in,   pus = pus ) }"},{"path":"https://elsa-undp.github.io/elsar/reference/make_mangroves.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extract general vector data — make_mangroves","title":"Function to extract general vector data — make_mangroves","text":"make_mangroves()allows align, normalise sffile save raster file. Originally created prepare Global Mangrove Watch data.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_mangroves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extract general vector data — make_mangroves","text":"","code":"make_mangroves(sf_in, pus, iso3, name_out, output_path = NULL)"},{"path":"https://elsa-undp.github.io/elsar/reference/make_mangroves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extract general vector data — make_mangroves","text":"sf_in sf file contains data put right format pus SpatRaster file contains reference spatial extent, crs etc.form planning units iso3 string iso3 name data (country name) name_out string data name used output tiffile output_path optional output path created file.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_mangroves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to extract general vector data — make_mangroves","text":"SpatRaster file aligned normalised","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_mangroves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to extract general vector data — make_mangroves","text":"","code":"if (FALSE) { boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"IND\",   iso3_column = \"iso3cd\" )  # make planning units pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE )  path_in <- \"<yourPath>\" ist_dat <- extract_filename_filetype(   data_name = \"gmw\",   file_path = path_in )  mangroves <- load_data(   file_name = paste0(list_dat[\"filename\"][[1]], list_dat[\"filetype\"][[1]]),   file_path = path_in,   file_type = list_dat[\"filetype\"][[1]],   wkt_filter = TRUE,   bb_extend = pus )  mangrove_raster <- make_mangroves(   sf_in = mangroves,   pus = pus ) }"},{"path":"https://elsa-undp.github.io/elsar/reference/make_normalised_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Normalized Raster Aligned with and masked by Planning Units — make_normalised_raster","title":"Create a Normalized Raster Aligned with and masked by Planning Units — make_normalised_raster","text":"function takes input raster, aligns specified planning units (PUs), optionally inverts, rescales, applies conditional expressions, saves processed raster specified output path.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_normalised_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Normalized Raster Aligned with and masked by Planning Units — make_normalised_raster","text":"","code":"make_normalised_raster(   raster_in,   pus,   iso3,   invert = FALSE,   rescaled = TRUE,   method_override = NULL,   conditional_expression = NULL,   fill_na = TRUE,   name_out,   output_path = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_normalised_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Normalized Raster Aligned with and masked by Planning Units — make_normalised_raster","text":"raster_in SpatRaster input raster processed. pus SpatVector planning units (PUs) align raster . iso3 character ISO3 country code used naming output file. invert logical TRUE, inverts raster values (default: FALSE). rescaled logical TRUE, rescales raster using rescale_raster() (default: TRUE). method_override character Optional method terra::project(), overriding default (default: NULL). conditional_expression function Optional method apply function raster resampling PU layer (default: NULL). fill_na logical TRUE, fills NA values 0 masking (default: TRUE). name_out character name output raster file (without extension). output_path character directory path save output raster (default: NULL, .e., saved).","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_normalised_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Normalized Raster Aligned with and masked by Planning Units — make_normalised_raster","text":"Returns SpatRaster object reprojected processed. output_path specified, saves raster COG (Cloud Optimized GeoTIFF).","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_normalised_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Normalized Raster Aligned with and masked by Planning Units — make_normalised_raster","text":"function reprojects input raster (raster_in) match CRS resolution planning units (pus). method reprojection can overridden using method_override. conditional_expression provided, applied reprojection. function can optionally rescale (0-1) invert raster values.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_normalised_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Normalized Raster Aligned with and masked by Planning Units — make_normalised_raster","text":"","code":"if (FALSE) { # Example usage: raster_out <- make_normalised_raster(   raster_in = my_raster,   pus = my_pus,   iso3 = \"USA\",   invert = TRUE,   rescaled = FALSE,   name_out = \"aligned_raster\",   output_path = \"/path/to/output\" )  raster_out <- make_normalised_raster(   raster_in = my_raster,   pus = my_pus,   iso3 = \"USA\",   conditional_expression = function(r) ifel(r %in% c(1:4, 7, 9), 1, 0) ) }"},{"path":"https://elsa-undp.github.io/elsar/reference/make_planning_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create planning units and custom projection — make_planning_units","title":"Function to create planning units and custom projection — make_planning_units","text":"function creates planning units spatial prioritisation problem raster format.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_planning_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create planning units and custom projection — make_planning_units","text":"","code":"make_planning_units(   boundary_proj,   pu_size = NULL,   pu_threshold = 850000,   limit_to_mainland = FALSE,   iso3,   output_path = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_planning_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create planning units and custom projection — make_planning_units","text":"boundary_proj sfobject representing boundary planning region preferred projection. Preferably generated make_boundary() pu_size way define custom planning unit size. Can NULL use default settings generate planning units small possible whilst still computationally efficient. pu_threshold integer value gives maximum number PUs. default (8.5e5) set based prioritizr processing time, network transfer time solver time. limit_to_mainland logical determines whether planning units created mainland area (FALSE; default) (TRUE). iso3 ISO3 country code (character) country interest. output_path optional output path created file.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_planning_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create planning units and custom projection — make_planning_units","text":"raster (.tif) file planning unit information chosen planning region.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_planning_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create planning units and custom projection — make_planning_units","text":"","code":"boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(boundary_proj = boundary_proj,                            pu_size = NULL,                            pu_threshold = 8.5e5,                            limit_to_mainland = FALSE) #> [1] \"The current number of planning units is: 3743382\" #> [1] \"The current number of planning units is: 2396805\" #> [1] \"The current number of planning units is: 1665187\" #> [1] \"The current number of planning units is: 1223941\" #> [1] \"The current number of planning units is: 741036\""},{"path":"https://elsa-undp.github.io/elsar/reference/make_postgres_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PostgreSQL Connection Configuration as a Dictionary — make_postgres_connection","title":"Create a PostgreSQL Connection Configuration as a Dictionary — make_postgres_connection","text":"function generates PostgreSQL connection configuration using named list, can used directly database connection functions.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_postgres_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PostgreSQL Connection Configuration as a Dictionary — make_postgres_connection","text":"","code":"make_postgres_connection(   host = \"localhost\",   dbname,   port = 5432,   user,   password )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_postgres_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PostgreSQL Connection Configuration as a Dictionary — make_postgres_connection","text":"host host database. Defaults 'localhost' local PostgreSQL database, can also accept IP address (e.g., '192.168.1.1'). dbname name PostgreSQL database. parameter required. port port PostgreSQL server running. Defaults 5432. user valid database user name. parameter required. password password specified user. parameter required.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_postgres_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PostgreSQL Connection Configuration as a Dictionary — make_postgres_connection","text":"named list representing PostgreSQL connection configuration.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_postgres_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a PostgreSQL Connection Configuration as a Dictionary — make_postgres_connection","text":"","code":"if (FALSE) { # Example with explicit parameters connection_dict <- make_postgres_connection(   host = 'localhost',   dbname = 'mydatabase',   port = 5432,   user = 'myuser',   password = 'mypassword' )  # Use the connection dictionary in other functions load_data(file_name = 'mytable', file_type = 'postgres', db_info = connection_dict) }"},{"path":"https://elsa-undp.github.io/elsar/reference/make_protected_areas.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create existing protected area raster file. — make_protected_areas","title":"Function to create existing protected area raster file. — make_protected_areas","text":"Function create existing protected area raster file.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_protected_areas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create existing protected area raster file. — make_protected_areas","text":"","code":"make_protected_areas(   from_wdpa = TRUE,   iso3,   download_path = NULL,   sf_in,   status = c(\"Established\", \"Inscribed\", \"Designated\"),   pa_def = 1,   designation_mab = FALSE,   buffer_points = TRUE,   area_column = \"REP_AREA\",   nQuadSegs = 50,   return_sf = FALSE,   pus,   output_path = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_protected_areas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create existing protected area raster file. — make_protected_areas","text":"from_wdpa logical. TRUE, downloads data wdpar package. information data package, please consult online package documentation. iso3 string iso3 name data (country name) download_path path wdpa data saved . sf_in sf object alternative downloading data wdpar package. needed from_wdpa FALSE. status vector containing status protected area included. Based STATUS field wdpa database. Default c(\"Established\", \"Inscribed\", \"Designated\"). pa_def value list values containing pa definition (1 = protected area; 0 = OECM (supported yet)) include. Default 1. designation_mab logical. FALSE, excludes UNESCO MAB areas. buffer_points logical. relevant \"POINT\" \"MULTIPOINT\" geometries exist data. TRUE, creates circular buffer around \"POINT\" data based area information data used polygon data needed exactextractr calculations. area_column string column name area information needed buffer calculations. nQuadSegs integer specifying number segments use buffering. Default 50. return_sf logical. Allows return sfobject needed. Default FALSE. pus raster file contains reference spatial extent, crs etc.form planning units. output_path optional output path created file.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_protected_areas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create existing protected area raster file. — make_protected_areas","text":"rasterfile aligned planning units","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_protected_areas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create existing protected area raster file. — make_protected_areas","text":"","code":"if (FALSE) { boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\" )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE )  current_pas <- make_protected_areas(   iso3 = \"NPL\",   download_path = here::here(),   buffer_points = TRUE,   pus = pus ) }"},{"path":"https://elsa-undp.github.io/elsar/reference/make_protection_zone.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create protection zone for ELSA analysis — make_protection_zone","title":"Function to create protection zone for ELSA analysis — make_protection_zone","text":"function creates SpatRaster used filter planning units available \"protect\" action ELSA framework based HFP, agricultural areas buildings. can also used create layer used locked-constraint zone.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_protection_zone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create protection zone for ELSA analysis — make_protection_zone","text":"","code":"make_protection_zone(   current_pas = NULL,   hfp_in,   crop_in = NULL,   built_in = NULL,   pus,   iso3,   hfp_threshold = 0.95,   filter_patch_size = TRUE,   min_patch_size = 20,   make_locked_out = FALSE,   output_path = NULL )"},{"path":"https://elsa-undp.github.io/elsar/reference/make_protection_zone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create protection zone for ELSA analysis — make_protection_zone","text":"current_pas Either NULL vector file current protected areas. NULL, PA sf object created make_protected_areas() function. hfp_in SpatRaster human footprint index. cropped re-projected PUs. crop_in SpatRaster crop data. cropped (CURRENTLY: rescaled) re-projected PUs. built_in SpatRaster building data. cropped (CURRENTLY: rescaled) re-projected PUs. pus SpatRaster file contains reference spatial extent, crs etc.form planning units. iso3 string iso3 name data (country name). hfp_threshold <1, HFP threshold calculated based quantile approach (HFP inside PAs excluding x% highest; default 0.95). >1, value used threshold. filter_patch_size Logical. Whether filter clumps smaller given threshold. min_patch_size Positive integer. Clumps smaller removed. make_locked_out Logical. Whether change data available planning units zone layer locked-constraint prioritizr. swap 0s 1s. output_path optional output path created file.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_protection_zone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create protection zone for ELSA analysis — make_protection_zone","text":"SpatRaster file either serves available planning units protection zone ELSA analysis locked-areas zone.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/make_protection_zone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create protection zone for ELSA analysis — make_protection_zone","text":"","code":"if (FALSE) { boundary_proj <- make_boundary(   boundary_in = boundary_dat,   iso3 = \"NPL\",   iso3_column = \"iso3cd\",   do_project = TRUE )  pus <- make_planning_units(   boundary_proj = boundary_proj,   pu_size = NULL,   pu_threshold = 8.5e5,   limit_to_mainland = FALSE )  path_in <- \"YourDataPath\"  list_dat <- extract_filename_filetype(   data_name = \"hfp\",   file_path = path_in )  load_hfp <- elsar_load_data(   file_name = paste0(list_dat[\"filename\"][[1]], list_dat[\"filetype\"][[1]]),   file_type = list_dat[\"filetype\"][[1]], file_path = path_in )  list_dat <- extract_filename_filetype(   data_name = \"crop_suit\",   file_path = path_in )  load_crop <- elsar_load_data(   file_name = paste0(list_dat[\"filename\"][[1]], list_dat[\"filetype\"][[1]]),   file_type = list_dat[\"filetype\"][[1]], file_path = path_in )  list_dat <- extract_filename_filetype(   data_name = \"build\",   file_path = path_in )  load_built <- elsar_load_data(   file_name = paste0(list_dat[\"filename\"][[1]], list_dat[\"filetype\"][[1]]),   file_type = list_dat[\"filetype\"][[1]], file_path = path_in )  protection_zone1 <- make_protection_zone(   hfp_in = load_hfp,   crop_in = load_crop,   built_in = load_built,   pus = pus,   iso3 = \"NPL\",   make_locked_out = FALSE )  protection_zone2 <- make_protection_zone(   hfp_in = load_hfp,   crop_in = load_crop,   built_in = load_built,   filter_patch_size = FALSE,   pus = pus,   iso3 = \"NPL\",   make_locked_out = FALSE )  protection_zone3 <- make_protection_zone(   hfp_in = load_hfp,   built_in = load_built,   hfp_threshold = 13,   pus = pus,   iso3 = \"NPL\",   make_locked_out = TRUE ) }"},{"path":"https://elsa-undp.github.io/elsar/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://elsa-undp.github.io/elsar/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/rescale_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale rasters to between 0 and 1 — rescale_raster","title":"Rescale rasters to between 0 and 1 — rescale_raster","text":"Rescale rasters 0 1","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/rescale_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale rasters to between 0 and 1 — rescale_raster","text":"","code":"rescale_raster(   raster_in,   raster_in_min = terra::global(raster_in, min, na.rm = TRUE)$min,   raster_in_max = terra::global(raster_in, max, na.rm = TRUE)$max,   new_min = 0,   new_max = 1 )"},{"path":"https://elsa-undp.github.io/elsar/reference/rescale_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale rasters to between 0 and 1 — rescale_raster","text":"raster_in Input raster raster_in_min Min value raster raster_in_max Max value raster new_min 0 new_max 1","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/rescale_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale rasters to between 0 and 1 — rescale_raster","text":"raster file normalised 0 1","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/rescale_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescale rasters to between 0 and 1 — rescale_raster","text":"","code":"if (FALSE) { raster_rescaled <- rescale_raster(dat_aligned) }"},{"path":"https://elsa-undp.github.io/elsar/reference/wad_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get wad data saved as tif — get_wad_data","title":"Get wad data saved as tif — get_wad_data","text":"Get wad data saved tif","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/wad_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get wad data saved as tif — get_wad_data","text":"","code":"get_wad_data()"},{"path":"https://elsa-undp.github.io/elsar/reference/wad_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Get wad data saved as tif — get_wad_data","title":"Get wad data saved as tif — get_wad_data","text":"Get wad data saved tif","code":""},{"path":"https://elsa-undp.github.io/elsar/reference/wad_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get wad data saved as tif — get_wad_data","text":"","code":"get_wad_data()"}]

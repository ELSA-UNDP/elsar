% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elsar_plot_feature.R
\name{elsar_plot_feature}
\alias{elsar_plot_feature}
\title{Plot a single feature raster within planning unit outlines}
\usage{
elsar_plot_feature(
  raster_in,
  pus,
  legend_title = NULL,
  color_map = "viridis",
  invert_palette = FALSE,
  figure_path = NULL,
  no_legend = FALSE
)
}
\arguments{
\item{raster_in}{SpatRaster. The raster to be plotted.}

\item{pus}{SpatVector. Planning units used as an outline for the raster.}

\item{legend_title}{character, optional. Title for the legend. Defaults to NULL.}

\item{color_map}{character. Name of the viridis palette to use. Defaults to "viridis".}

\item{invert_palette}{logical. If TRUE, reverses the palette direction. Defaults to FALSE.}

\item{figure_path}{character, optional. If provided, path to save the figure as a PNG.}

\item{no_legend}{logical. If TRUE, suppresses the legend. Defaults to FALSE.}
}
\value{
A \code{ggplot} object displaying the raster with optional planning unit outlines.
}
\description{
Creates a ggplot2 map of a single feature represented by a \code{SpatRaster}, with optional
planning unit outlines, customizable color palette direction, and optional saving to disk.
}
\examples{
boundary_proj <- make_boundary(
  boundary_in = boundary_dat,
  iso3 = "NPL",
  iso3_column = "iso3cd"
)

pus <- make_planning_units(
  boundary_proj = boundary_proj,
  pu_size = NULL,
  pu_threshold = 8.5e5,
  limit_to_mainland = FALSE
)

wad_dat <- get_wad_data()

wadOut <- make_normalised_raster(
  raster_in = wad_dat,
  pus = pus,
  iso3 = "NPL"
)

elsar_plot_feature(
  raster_in = wadOut,
  pus = pus,
  legend_title = "WAD",
  color_map = "magma",
  invert_palette = TRUE,
  figure_path = "figures",
  no_legend = FALSE
)
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-plotting.R
\name{elsar_plot_background_d}
\alias{elsar_plot_background_d}
\title{Function to create a plot with discrete background data for another plot}
\usage{
elsar_plot_background_d(
  plot_type = "ggplot",
  background_dat = NULL,
  rescale_background = TRUE,
  increase_extend = 0.05,
  main_data = NULL,
  background_alpha = 0.2,
  color_map = "viridis",
  custom_palette = NULL,
  categorical = FALSE,
  number_categories = 10,
  data_layer = NULL
)
}
\arguments{
\item{plot_type}{A character denoting whether "ggplot" or "tmap" is being used. Needs to match the main plot}

\item{background_dat}{A \code{SpatRaster} file that contains the data to be used as a background.}

\item{rescale_background}{Logical. If TRUE, rescales the \code{SpatRaster} to values between 0-1.}

\item{increase_extend}{A numerical value that allows to extend the background beyond the extent of \code{raster_in}. If extend_background <= 1, the lat and lon extend will be extended by the ratio provided (e.g. 0.05 will extend it by 5\%). If extend_background > 1 all sides will be extended by the absolute value provided.}

\item{main_data}{A \code{SpatRaster} file that contains the data that will be the main part of the main plot.}

\item{background_alpha}{A value (0-1) for the opacity of the locked in areas when plotted on top of other plots.}

\item{color_map}{The name of the \code{viridis} palette to be used. Default is "viridis".}

\item{custom_palette}{An optional custom palette for plotting. Default uses the \code{viridis} package.}

\item{categorical}{logical. if data is categorical (TRUE), convert to factor (if not yet) and use the number of categories given.}

\item{number_categories}{If data does not have pre-defined categories, how many categories to split the continuous data into}

\item{data_layer}{The data layer with continuous data to be converted into categories.}
}
\value{
A \code{list} of a \code{ggplot} or \code{tmap} object and a \code{SpatRaster} with the new background data.
}
\description{
Function to create a plot with discrete background data for another plot
}
\examples{
boundary_proj <- make_boundary(
  boundary_in = boundary_dat,
  iso3 = "NPL",
  iso3_column = "iso3cd",
  custom_projection = TRUE
)

pus <- make_planning_units(
  boundary_proj = boundary_proj,
  pu_size = NULL,
  pu_threshold = 8.5e5,
  limit_to_mainland = FALSE
)
wad_dat <- get_wad_data()

wadOut <- make_normalised_raster(
  raster_in = wad_dat,
  pus = pus,
  iso3 = "NPL"
)
(background_plot <- elsar_plot_background_d(
  background_dat = wad_dat,
  main_data = wadOut,
  increase_extend = 0.05,
  number_categories = 10,
  data_layer = "wad_final_cog",
))
}

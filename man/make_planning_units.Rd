% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_planning_units.R
\name{make_planning_units}
\alias{make_planning_units}
\title{Function to create planning units and custom projection}
\usage{
make_planning_units(
  boundary_proj,
  pu_size = NULL,
  pu_threshold = 850000,
  limit_to_mainland = FALSE,
  iso3,
  output_path = NULL
)
}
\arguments{
\item{boundary_proj}{A \code{sf}object representing the boundary of the planning region in the preferred projection. Preferably generated with \code{\link[=make_boundary]{make_boundary()}}}

\item{pu_size}{A way to define a custom planning unit size. Can be NULL to use default settings that generate planning units as small as possible whilst still being computationally efficient.}

\item{pu_threshold}{An integer value that gives a maximum number of PUs. The default (\code{8.5e5}) is set based on \code{prioritizr} processing time, network transfer time and solver time.}

\item{limit_to_mainland}{A logical that determines whether planning units should only be created for mainland area (\code{FALSE}; default) or not (\code{TRUE})}

\item{iso3}{The iso3 country code (character) of the country of interest.}

\item{output_path}{An optional output path for the created file.}
}
\value{
A raster (\code{.tif}) file with the planning unit information for the chosen planning region.
}
\description{
This function creates planning units for a spatial prioritisation problem in a raster format. It also creates a custom projection (\code{wkt} file) centred on the planning region based on the Mollweide projection.
}
\examples{
boundary_proj <- make_boundary(
  boundary_in = boundary_dat,
  iso3 = "NPL",
  iso3_column = "iso3cd"
)

pus <- make_planning_units(boundary_proj = boundary_proj,
                           pu_size = NULL,
                           pu_threshold = 8.5e5,
                           limit_to_mainland = FALSE)
}
